{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\weather2\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport QuestionBox from \"./components2/questionBox\";\nimport Result from \"./components2/Result\";\nimport Home from \"./Home\";\nimport Welcome from './Welcome/Welcome';\nimport Login from './Login/Login';\nimport Signup from './Signup/Signup';\nimport NotFound from './NotFound';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = \"pk.eyJ1Ijoicm9iZXJ0MTk5NSIsImEiOiJjazhqZGQ4b2owN255M2VxcXBkaHp5cGowIn0.5oKYRrs_iAmrx2HfbpB-Hw\";\n\nvar MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\n\nvar start = [18.59436, 53.01011];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lng: 18.59436,\n      lat: 53.01011,\n      width: '100vw',\n      height: \"60vh\",\n      zoom: 9,\n      selectedPark: null,\n      isModalOpen: false,\n      isModalOpen2: false,\n      Name: '',\n      Description: '',\n      X: 53.0331258,\n      Y: 18.6355611,\n      search: '',\n      RouteId: 1,\n      Image: '',\n      Quest: '',\n      A: '',\n      B: '',\n      C: '',\n      D: '',\n      Good: '',\n      NameRoute: '',\n      items: [],\n      newItems: [],\n      score: 0,\n      responses: 0,\n      result: 5,\n      point: 0,\n      PointId: [],\n      elements: [],\n      elements2: [{\n        \"Name\": \"Pomnik Mikołaja Kopernika\",\n        \"Description\": \"Stojący w południowo-wschodnim narożniku staromiejskiego rynku pomnik Mikołaja Kopernika jest jednym z najważniejszych symboli Torunia.\",\n        \"X\": 18.604488372802734,\n        \"Y\": 53.010440826416016\n      }, {\n        \"Name\": \"Muzeum Toruńskiego Piernika\",\n        \"Description\": \"Muzeum Toruńskiego Piernika mieści się w najstarszej w Europie fabryce pierników należącej niegdyś do rodziny Weese.\",\n        \"X\": 18.6063585,\n        \"Y\": 53.0111911\n      }, {\n        \"Name\": \"Toruń Plaza\",\n        \"Description\": \"Centrum handlowe Toruń Plaza\",\n        \"X\": 18.5596037,\n        \"Y\": 53.0156193\n      }, {\n        \"Name\": \"Dom Legend Toruńskich\",\n        \"Description\": \"Dom Legend Toruńskich to miejsce będące połączeniem interaktywnego muzeum i teatru. We wnętrzu średniowiecznej piwnicy opowiadane tu są tradycyjne legendy toruńskie przekazywane ustnie z dziada pradziada.  Można tu spędzić czas słuchając opowieści przewodników albo czynnie uczestniczyć w opisywanych historiach.\",\n        \"X\": 18.6038847,\n        \"Y\": 53.0102119\n      }, {\n        \"Name\": \"Bunkier-Wisłą\",\n        \"Description\": \"Bunkier-Wisła w Toruniu – niemiecki schron przeciwlotniczy z okresu II wojny światowej, obecnie muzeum interaktywne w Toruniu.\",\n        \"X\": 18.6017954,\n        \"Y\": 53.00812\n      }, {\n        \"Name\": \"Rzeźba Osiołka w Toruniu\",\n        \"Description\": \"Figura osła nawiązuje do stosowanych w dawnym Toruniu kar za drobne i cięższe przewinienia, wymierzanych tutaj - w pobliżu odwachu - dla żołnierzy toruńskich sił zbrojnych.\",\n        \"X\": 18.6030514,\n        \"Y\": 53.0101886\n      }],\n      elements3: [],\n      history: [// [{ \"Name\": \"Pomnik Mikołaja Kopernika\", \"Description\": \"Stojący w południowo-wschodnim narożniku staromiejskiego rynku pomnik Mikołaja Kopernika jest jednym z najważniejszych symboli Torunia.\", \"X\": 18.604488372802734, \"Y\": 53.010440826416016 }, { \"Name\": \"Muzeum Toruńskiego Piernika\", \"Description\": \"Muzeum Toruńskiego Piernika mieści się w najstarszej w Europie fabryce pierników należącej niegdyś do rodziny Weese.\", \"X\": 18.6063585, \"Y\": 53.0111911 }, { \"Name\": \"Toruń Plaza\", \"Description\": \"Centrum handlowe Toruń Plaza\", \"X\": 18.5596037, \"Y\": 53.0156193 }], [{ \"Name\": \"Dom Legend Toruńskich\", \"Description\": \"Dom Legend Toruńskich to miejsce będące połączeniem interaktywnego muzeum i teatru. We wnętrzu średniowiecznej piwnicy opowiadane tu są tradycyjne legendy toruńskie przekazywane ustnie z dziada pradziada.  Można tu spędzić czas słuchając opowieści przewodników albo czynnie uczestniczyć w opisywanych historiach.\", \"X\": 18.6038847, \"Y\": 53.0102119 }, { \"Name\": \"Bunkier-Wisłą\", \"Description\": \"Bunkier-Wisła w Toruniu – niemiecki schron przeciwlotniczy z okresu II wojny światowej, obecnie muzeum interaktywne w Toruniu.\", \"X\": 18.6017954, \"Y\": 53.00812 }, { \"Name\": \"Rzeźba Osiołka w Toruniu\", \"Description\": \"Figura osła nawiązuje do stosowanych w dawnym Toruniu kar za drobne i cięższe przewinienia, wymierzanych tutaj - w pobliżu odwachu - dla żołnierzy toruńskich sił zbrojnych.\", \"X\": 18.6030514, \"Y\": 53.0101886 }]\n      ],\n      currentHistoryIndex: 0,\n      idRt: [],\n      qBank: [{\n        question: \"Ile pomnik ma lat?\",\n        answers: [\"100\", \"200\", \"300\", \"400\"],\n        correct: \"100\",\n        id: 0\n      }, {\n        question: \"Jak test jest\",\n        answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\n        correct: \"Mikołaj\",\n        id: 1\n      }, {\n        question: \"Jaką testowea\",\n        answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\n        correct: \"test\",\n        id: 2\n      }, {\n        question: \"testowe pytanie2\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 3\n      }, {\n        question: \"testowe pytanie3\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 4\n      }, {\n        question: \"testowe pytanie4\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 5\n      }, {\n        question: \"testowe pytanie5\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 6\n      }],\n      qBank2: [{\n        question: \"Ile pomnik ma lat?\",\n        answers: [\"100\", \"200\", \"300\", \"400\"],\n        correct: \"100\",\n        id: 0\n      }, {\n        question: \"Jak test jest\",\n        answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\n        correct: \"Mikołaj\",\n        id: 1\n      }, {\n        question: \"Jaką testowea\",\n        answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\n        correct: \"test\",\n        id: 2\n      }, {\n        question: \"testowe pytanie2\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 3\n      }, {\n        question: \"testowe pytanie3\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 4\n      }, {\n        question: \"testowe pytanie4\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 5\n      }, {\n        question: \"testowe pytanie5\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 6\n      }],\n      trasy: [],\n      history2: [],\n      trasy2: []\n    };\n\n    this.handleOnHistoryPush = e => {\n      // e.preventDefault();\n      // this.setState({ history: ([...this.state.history, this.state.elements]) });\n      this.setState({\n        elements: [],\n        PointId: []\n      });\n      const newItem = {\n        UpdateList: [...this.state.PointId],\n        \"Name\": this.state.NameRoute,\n        \"Description\": this.state.Description\n      };\n      fetch(\"http://dearjean.ddns.net:44301/api/Points3/Change\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newItem)\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n        this.setState({\n          history: [...this.state.history, res.Points3s]\n        });\n      }); // console.log(newItem)\n      // console.log(this.state.elements)\n    };\n\n    this.appendElement = (Name, Description, X, Y, RouteId) => {\n      this.setState({\n        elements: [...this.state.elements, {\n          Name,\n          Description,\n          X,\n          Y,\n          RouteId\n        }] // elements2: ([...this.state.elements2, { Name, Description, X, Y, RouteId }])\n\n      });\n      const newItem = {\n        \"Name\": Name,\n        \"Y\": Y,\n        \"X\": X,\n        \"RouteId\": 1,\n        \"Description\": Description\n      };\n      fetch(\"http://dearjean.ddns.net:44301/api/Points3\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newItem)\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          PointId: [...this.state.PointId, res.Id]\n        });\n      });\n    };\n\n    this.appendQuestion = (Quest, A, B, C, D, Good) => {\n      this.setState({\n        qBank: [...this.state.qBank, {\n          question: Quest,\n          answers: [A, B, C, D],\n          correct: Good\n        }]\n      });\n    };\n\n    this.addItem2 = e => {\n      e.preventDefault();\n    };\n\n    this.addItem = e => {\n      e.preventDefault();\n      const newItem = {\n        \"Name\": this.state.Name,\n        \"Description\": this.state.Description,\n        \"Y\": parseFloat(this.state.X),\n        \"X\": parseFloat(this.state.Y)\n      };\n      this.setState(prevState => ({\n        items: [...prevState.items, newItem]\n      }));\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        newItems\n      });\n      fetch(\"http://dearjean.ddns.net:44301/api/PointOnlies\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newItem)\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n      });\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: this.state.zoom\n      });\n      var bounds = [[18.11318691590263, 50.022222], [18.90647886197926, 53.3331258]];\n      map.setMaxBounds(bounds); // initialize the map canvas to interact with later\n\n      var canvas = map.getCanvasContainer(); // an arbitrary start will always be the same\n      // only the end or destination will change\n\n      start = [18.59436, 53.01011]; // this is where the code for the next step will go\n      // create a function to make a directions request\n\n      function getRoute(end) {\n        // make a directions request using cycling profile\n        // an arbitrary start will always be the same\n        // only the end or destination will change\n        // var start = [18.59436, 53.01011];\n        var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken; // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n\n        req.onload = function () {\n          var json = JSON.parse(req.response);\n          var data = json.routes[0];\n          var route = data.geometry.coordinates;\n          var geojson = {\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'LineString',\n              coordinates: route\n            }\n          }; // if the route already exists on the map, reset it using setData\n\n          if (map.getSource('route')) {\n            map.getSource('route').setData(geojson);\n          } else {\n            // otherwise, make a new request\n            map.addLayer({\n              id: 'route',\n              type: 'line',\n              source: {\n                type: 'geojson',\n                data: {\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'LineString',\n                    coordinates: geojson\n                  }\n                }\n              },\n              layout: {\n                'line-join': 'round',\n                'line-cap': 'round'\n              },\n              paint: {\n                'line-color': '#3887be',\n                'line-width': 5,\n                'line-opacity': 0.75\n              }\n            });\n          } // get the sidebar and add the instructions\n\n\n          var instructions = document.getElementById('instructions');\n          var steps = data.legs[0].steps;\n          var tripInstructions = [];\n\n          for (var i = 0; i < steps.length; i++) {\n            tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n            instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration / 60) + ' min 🚴 </span>' + tripInstructions.join(\"\");\n          }\n        };\n\n        req.send();\n      }\n\n      map.on('load', function () {\n        // make an initial directions request that\n        // starts and ends at the same location\n        getRoute(start); // Add starting point to the map\n\n        map.addLayer({\n          id: 'point',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: start\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 10,\n            'circle-color': 'black'\n          }\n        }); // this is where the code from the next step will go\n      });\n      map.on('click', function (e) {\n        var coordsObj = e.lngLat;\n        canvas.style.cursor = '';\n        var coords = Object.keys(coordsObj).map(function (key) {\n          return coordsObj[key];\n        });\n        var end = {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'Point',\n              coordinates: coords\n            }\n          }]\n        };\n\n        if (map.getLayer('end')) {\n          map.getSource('end').setData(end);\n        } else {\n          map.addLayer({\n            id: 'end',\n            type: 'circle',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'FeatureCollection',\n                features: [{\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'Point',\n                    coordinates: coords\n                  }\n                }]\n              }\n            },\n            paint: {\n              'circle-radius': 10,\n              'circle-color': '#f30'\n            }\n          });\n        }\n\n        getRoute(coords);\n        start = [coords[0], coords[1]];\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.addControl(new mapboxgl.NavigationControl());\n      map.addControl(new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }));\n\n      for (const obj of newItems) {\n        // var obj = this.state.items[i];\n        let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n        new mapboxgl.Marker().setLngLat(myLatlng).setPopup(new mapboxgl.Popup({\n          offset: 25\n        }).setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p><button onclick=(function(){event.target.parentNode.remove()})();>This Button</button>')) // <button onclick=(function(){event.target.parentNode.remove})();>This Button</button>\n        .addTo(map);\n      }\n\n      e.preventDefault();\n    };\n\n    this.handleFetch = e => {\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: this.state.zoom\n      });\n\n      const loopOverItems = () => {\n        for (var i = 0; i < this.state.items.length; i++) {\n          var obj = this.state.items[i];\n          let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n          new mapboxgl.Marker().setLngLat(myLatlng).setPopup(new mapboxgl.Popup({\n            offset: 25\n          }).setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>')).addTo(map);\n        }\n      };\n\n      fetch('http://dearjean.ddns.net:44301/api/PointOnlies').then(resposne => {\n        if (resposne.ok) {\n          return resposne;\n        }\n\n        throw Error(resposne.status);\n      }).then(response => response.json()).then(data => this.setState({\n        items: data\n      }, loopOverItems)).catch(error => console.log(error));\n      var bounds = [[18.11318691590263, 50.022222], [18.90647886197926, 53.3331258]];\n      map.setMaxBounds(bounds); // initialize the map canvas to interact with later\n\n      var canvas = map.getCanvasContainer(); // an arbitrary start will always be the same\n      // only the end or destination will change\n\n      start = [18.59436, 53.01011]; // this is where the code for the next step will go\n      // create a function to make a directions request\n\n      function getRoute(end) {\n        // make a directions request using cycling profile\n        // an arbitrary start will always be the same\n        // only the end or destination will change\n        // var start = [18.59436, 53.01011];\n        var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken; // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n\n        req.onload = function () {\n          var json = JSON.parse(req.response);\n          var data = json.routes[0];\n          var route = data.geometry.coordinates;\n          var geojson = {\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'LineString',\n              coordinates: route\n            }\n          }; // if the route already exists on the map, reset it using setData\n\n          if (map.getSource('route')) {\n            map.getSource('route').setData(geojson);\n          } else {\n            // otherwise, make a new request\n            map.addLayer({\n              id: 'route',\n              type: 'line',\n              source: {\n                type: 'geojson',\n                data: {\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'LineString',\n                    coordinates: geojson\n                  }\n                }\n              },\n              layout: {\n                'line-join': 'round',\n                'line-cap': 'round'\n              },\n              paint: {\n                'line-color': '#3887be',\n                'line-width': 5,\n                'line-opacity': 0.75\n              }\n            });\n          } // get the sidebar and add the instructions\n\n\n          var instructions = document.getElementById('instructions');\n          var steps = data.legs[0].steps;\n          var tripInstructions = [];\n\n          for (var i = 0; i < steps.length; i++) {\n            tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n            instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration / 60) + ' min 🚴 </span>' + tripInstructions.join(\"\");\n          }\n        };\n\n        req.send();\n      }\n\n      map.on('load', function () {\n        // make an initial directions request that\n        // starts and ends at the same location\n        getRoute(start); // Add starting point to the map\n\n        map.addLayer({\n          id: 'point',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: start\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 10,\n            'circle-color': 'black'\n          }\n        }); // this is where the code from the next step will go\n      });\n      map.on('click', function (e) {\n        var coordsObj = e.lngLat;\n        canvas.style.cursor = '';\n        var coords = Object.keys(coordsObj).map(function (key) {\n          return coordsObj[key];\n        });\n        var end = {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'Point',\n              coordinates: coords\n            }\n          }]\n        };\n\n        if (map.getLayer('end')) {\n          map.getSource('end').setData(end);\n        } else {\n          map.addLayer({\n            id: 'end',\n            type: 'circle',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'FeatureCollection',\n                features: [{\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'Point',\n                    coordinates: coords\n                  }\n                }]\n              }\n            },\n            paint: {\n              'circle-radius': 10,\n              'circle-color': '#f30'\n            }\n          });\n        }\n\n        getRoute(coords);\n        start = [coords[0], coords[1]];\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.addControl(new mapboxgl.NavigationControl());\n      map.addControl(new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }));\n      e.preventDefault();\n    };\n\n    this.handleSelect = event => {\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: 15\n      });\n      fetch(`http://dearjean.ddns.net:44301/api/Points3/RouteOnNumber?id=${this.state.currentHistoryIndex}&fbclid=IwAR2ZSVQ3WLxfVDrBgSvvejcxIm0lpE908_cm39yDAPah6LqJLqSLDLE-T_E`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        // console.log(res)\n        // history: data\n        history: [...this.state.history, data]\n      })).catch(error => console.log(error));\n\n      const loop = () => {\n        for (const obj of this.state.history[this.state.currentHistoryIndex]) {\n          // for (const obj of this.state.history) {\n          let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n          new mapboxgl.Marker().setLngLat(myLatlng).setPopup(new mapboxgl.Popup({\n            offset: 25\n          }).setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>')).addTo(map);\n        }\n      };\n\n      this.setState({\n        currentHistoryIndex: event.currentTarget.value\n      }, loop);\n      var bounds = [[18.11318691590263, 50.022222], [18.90647886197926, 53.3331258]];\n      map.setMaxBounds(bounds); // initialize the map canvas to interact with later\n\n      var canvas = map.getCanvasContainer(); // an arbitrary start will always be the same\n      // only the end or destination will change\n\n      start = [18.59436, 53.01011]; // this is where the code for the next step will go\n      // create a function to make a directions request\n\n      function getRoute(end) {\n        // make a directions request using cycling profile\n        // an arbitrary start will always be the same\n        // only the end or destination will change\n        // var start = [18.59436, 53.01011];\n        var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken; // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n\n        req.onload = function () {\n          var json = JSON.parse(req.response);\n          var data = json.routes[0];\n          var route = data.geometry.coordinates;\n          var geojson = {\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'LineString',\n              coordinates: route\n            }\n          }; // if the route already exists on the map, reset it using setData\n\n          if (map.getSource('route')) {\n            map.getSource('route').setData(geojson);\n          } else {\n            // otherwise, make a new request\n            map.addLayer({\n              id: 'route',\n              type: 'line',\n              source: {\n                type: 'geojson',\n                data: {\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'LineString',\n                    coordinates: geojson\n                  }\n                }\n              },\n              layout: {\n                'line-join': 'round',\n                'line-cap': 'round'\n              },\n              paint: {\n                'line-color': '#3887be',\n                'line-width': 5,\n                'line-opacity': 0.75\n              }\n            });\n          } // get the sidebar and add the instructions\n\n\n          var instructions = document.getElementById('instructions');\n          var steps = data.legs[0].steps;\n          var tripInstructions = [];\n\n          for (var i = 0; i < steps.length; i++) {\n            tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n            instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration / 60) + ' min 🚴 </span>' + tripInstructions.join(\"\");\n          }\n        };\n\n        req.send();\n      }\n\n      map.on('load', function () {\n        // make an initial directions request that\n        // starts and ends at the same location\n        getRoute(start); // Add starting point to the map\n\n        map.addLayer({\n          id: 'point',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: start\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 10,\n            'circle-color': 'black'\n          }\n        }); // this is where the code from the next step will go\n      });\n      map.on('click', function (e) {\n        var coordsObj = e.lngLat;\n        canvas.style.cursor = '';\n        var coords = Object.keys(coordsObj).map(function (key) {\n          return coordsObj[key];\n        });\n        var end = {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'Point',\n              coordinates: coords\n            }\n          }]\n        };\n\n        if (map.getLayer('end')) {\n          map.getSource('end').setData(end);\n        } else {\n          map.addLayer({\n            id: 'end',\n            type: 'circle',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'FeatureCollection',\n                features: [{\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'Point',\n                    coordinates: coords\n                  }\n                }]\n              }\n            },\n            paint: {\n              'circle-radius': 2,\n              'circle-color': '#f30'\n            }\n          });\n        }\n\n        getRoute(coords);\n        start = [coords[0], coords[1]];\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.addControl(new mapboxgl.NavigationControl());\n      map.addControl(new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }));\n      event.preventDefault();\n    };\n\n    this.openModal = id => {\n      console.log(id);\n      this.setState({\n        isModalOpen: true,\n        isModalOpen2: false\n      });\n      const qBank = [...this.state.qBank];\n      const elements2 = [...this.state.elements2];\n      const index = qBank.findIndex(q => q.id === id);\n      const task = qBank.splice(index, 1);\n      elements2.splice(index, 1);\n      this.setState({\n        qBank: task,\n        elements2\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isModalOpen: false,\n        isModalOpen2: true,\n        qBank: this.state.qBank2,\n        responses: 0,\n        score: 0\n      });\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === correctAnswer) {\n        this.setState({\n          score: this.state.score + 1,\n          point: this.state.point + 1\n        });\n      }\n\n      this.setState({\n        responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n      });\n    };\n\n    this.playAgain = () => {\n      const qBank = [{\n        question: \"Ile pomnik ma lat?\",\n        answers: [\"100\", \"200\", \"300\", \"400\"],\n        correct: \"100\",\n        id: 0\n      }, {\n        question: \"Jak test jest\",\n        answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\n        correct: \"Mikołaj\",\n        id: 1\n      }, {\n        question: \"Jaką testowea\",\n        answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\n        correct: \"test\",\n        id: 2\n      }];\n      this.setState({\n        responses: 0,\n        score: 0\n      });\n    };\n\n    this.openModal2 = () => {\n      this.setState({\n        isModalOpen2: true\n      });\n    };\n\n    this.closeModal2 = () => {\n      this.setState({\n        isModalOpen2: false\n      });\n    };\n\n    this.handleRoute = e => {\n      this.setState({\n        isModalOpen2: true\n      });\n      fetch(`http://dearjean.ddns.net:44301/api/Routes`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        // console.log(data)\n        // history: data\n        trasy: [...this.state.trasy, ...data],\n        trasy2: [...this.state.trasy, ...data]\n      })).catch(error => console.log(error));\n    };\n\n    this.myIp = id => {\n      console.log(id);\n      const newHistory2 = []; // console.log(this.state.idRt.RouteId)\n\n      for (const point of this.state.idRt) {\n        if (id === point.RouteId) {\n          // console.log(point.Name)\n          // console.log(point.RouteId)\n          newHistory2.push({\n            Name: point.Name,\n            Description: point.Description,\n            X: point.Y,\n            Y: point.X\n          });\n        }\n      }\n\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: 10\n      });\n\n      const loop = () => {\n        for (const obj of this.state.history2) {\n          let myLatlng = new mapboxgl.LngLat(obj.Y, obj.X);\n          new mapboxgl.Marker().setLngLat(myLatlng).setPopup(new mapboxgl.Popup({\n            offset: 25\n          }).setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>')).addTo(map);\n        }\n      };\n\n      this.setState({\n        history2: newHistory2\n      }, loop);\n      this.setState({\n        isModalOpen2: false\n      });\n      var bounds = [[18.11318691590263, 50.022222], [18.90647886197926, 53.3331258]];\n      map.setMaxBounds(bounds); // initialize the map canvas to interact with later\n\n      var canvas = map.getCanvasContainer(); // an arbitrary start will always be the same\n      // only the end or destination will change\n\n      start = [18.59436, 53.01011]; // this is where the code for the next step will go\n      // create a function to make a directions request\n\n      function getRoute(end) {\n        // make a directions request using cycling profile\n        // an arbitrary start will always be the same\n        // only the end or destination will change\n        // var start = [18.59436, 53.01011];\n        var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken; // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n\n        req.onload = function () {\n          var json = JSON.parse(req.response);\n          var data = json.routes[0];\n          var route = data.geometry.coordinates;\n          var geojson = {\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'LineString',\n              coordinates: route\n            }\n          }; // if the route already exists on the map, reset it using setData\n\n          if (map.getSource('route')) {\n            map.getSource('route').setData(geojson);\n          } else {\n            // otherwise, make a new request\n            map.addLayer({\n              id: 'route',\n              type: 'line',\n              source: {\n                type: 'geojson',\n                data: {\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'LineString',\n                    coordinates: geojson\n                  }\n                }\n              },\n              layout: {\n                'line-join': 'round',\n                'line-cap': 'round'\n              },\n              paint: {\n                'line-color': '#3887be',\n                'line-width': 5,\n                'line-opacity': 0.75\n              }\n            });\n          } // get the sidebar and add the instructions\n\n\n          var instructions = document.getElementById('instructions');\n          var steps = data.legs[0].steps;\n          var tripInstructions = [];\n\n          for (var i = 0; i < steps.length; i++) {\n            tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n            instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration / 60) + ' min 🚴 </span>' + tripInstructions.join(\"\");\n          }\n        };\n\n        req.send();\n      }\n\n      map.on('load', function () {\n        // make an initial directions request that\n        // starts and ends at the same location\n        getRoute(start); // Add starting point to the map\n\n        map.addLayer({\n          id: 'point',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: start\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 10,\n            'circle-color': 'black'\n          }\n        }); // this is where the code from the next step will go\n      });\n      map.on('click', function (e) {\n        var coordsObj = e.lngLat;\n        canvas.style.cursor = '';\n        var coords = Object.keys(coordsObj).map(function (key) {\n          return coordsObj[key];\n        });\n        var end = {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'Point',\n              coordinates: coords\n            }\n          }]\n        };\n\n        if (map.getLayer('end')) {\n          map.getSource('end').setData(end);\n        } else {\n          map.addLayer({\n            id: 'end',\n            type: 'circle',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'FeatureCollection',\n                features: [{\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'Point',\n                    coordinates: coords\n                  }\n                }]\n              }\n            },\n            paint: {\n              'circle-radius': 2,\n              'circle-color': '#f30'\n            }\n          });\n        }\n\n        getRoute(coords);\n        start = [coords[0], coords[1]];\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.addControl(new mapboxgl.NavigationControl());\n      map.addControl(new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }));\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.search.length === 0 && prevState.search.length === 0) {\n      fetch(`http://dearjean.ddns.net:44301/api/Routes`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        trasy: [...data]\n      })).catch(error => console.log(error));\n    }\n\n    if (prevState.search !== this.state.search) {\n      fetch(`http://dearjean.ddns.net:44301/api/Routes/Search?word=${this.state.search}`).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => // console.log(data)\n      this.setState({\n        // history: data\n        trasy: [...data]\n      }) // this.setState(prevState => ({\n      //   trasy: [prevState.data]\n      // }))\n      ).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Welcome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/Signup\",\n      component: Signup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"*\",\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/weather2/src/components/App.js"],"names":["React","Component","QuestionBox","Result","Home","Welcome","Login","Signup","NotFound","BrowserRouter","Route","Switch","mapboxgl","accessToken","MapboxGeocoder","require","start","App","state","lng","lat","width","height","zoom","selectedPark","isModalOpen","isModalOpen2","Name","Description","X","Y","search","RouteId","Image","Quest","A","B","C","D","Good","NameRoute","items","newItems","score","responses","result","point","PointId","elements","elements2","elements3","history","currentHistoryIndex","idRt","qBank","question","answers","correct","id","qBank2","trasy","history2","trasy2","handleOnHistoryPush","e","setState","newItem","UpdateList","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","Points3s","appendElement","Id","appendQuestion","addItem2","preventDefault","addItem","parseFloat","prevState","map","Map","container","mapContainer","style","center","bounds","setMaxBounds","canvas","getCanvasContainer","getRoute","end","url","req","XMLHttpRequest","open","onload","parse","response","data","routes","route","geometry","coordinates","geojson","type","properties","getSource","setData","addLayer","source","layout","paint","instructions","document","getElementById","steps","legs","tripInstructions","i","length","push","maneuver","instruction","innerHTML","Math","floor","duration","join","send","on","features","coordsObj","lngLat","cursor","coords","Object","keys","key","getLayer","addControl","FullscreenControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","obj","myLatlng","LngLat","Marker","setLngLat","setPopup","Popup","offset","setHTML","addTo","handleFetch","loopOverItems","resposne","ok","Error","status","catch","error","handleSelect","event","loop","currentTarget","value","openModal","index","findIndex","q","task","splice","closeModal","computeAnswer","answer","correctAnswer","playAgain","openModal2","closeModal2","handleRoute","myIp","newHistory2","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport QuestionBox from \"./components2/questionBox\";\nimport Result from \"./components2/Result\";\nimport Home from \"./Home\";\nimport Welcome from './Welcome/Welcome';\nimport Login from './Login/Login';\nimport Signup from './Signup/Signup';\nimport NotFound from './NotFound';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = \"pk.eyJ1Ijoicm9iZXJ0MTk5NSIsImEiOiJjazhqZGQ4b2owN255M2VxcXBkaHp5cGowIn0.5oKYRrs_iAmrx2HfbpB-Hw\";\nvar MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\nvar start = [18.59436, 53.01011];\n\n\nclass App extends Component {\n\n  state = {\n    lng: 18.59436,\n    lat: 53.01011,\n    width: '100vw',\n    height: \"60vh\",\n    zoom: 9,\n    selectedPark: null,\n    isModalOpen: false,\n    isModalOpen2: false,\n    Name: '',\n    Description: '',\n    X: 53.0331258,\n    Y: 18.6355611,\n    search: '',\n    RouteId: 1,\n    Image: '',\n    Quest: '',\n    A: '',\n    B: '',\n    C: '',\n    D: '',\n    Good: '',\n    NameRoute: '',\n    items: [],\n    newItems: [],\n    score: 0,\n    responses: 0,\n    result: 5,\n    point: 0,\n    PointId: [],\n    elements: [],\n    elements2: [{ \"Name\": \"Pomnik Mikołaja Kopernika\", \"Description\": \"Stojący w południowo-wschodnim narożniku staromiejskiego rynku pomnik Mikołaja Kopernika jest jednym z najważniejszych symboli Torunia.\", \"X\": 18.604488372802734, \"Y\": 53.010440826416016 }, { \"Name\": \"Muzeum Toruńskiego Piernika\", \"Description\": \"Muzeum Toruńskiego Piernika mieści się w najstarszej w Europie fabryce pierników należącej niegdyś do rodziny Weese.\", \"X\": 18.6063585, \"Y\": 53.0111911 }, { \"Name\": \"Toruń Plaza\", \"Description\": \"Centrum handlowe Toruń Plaza\", \"X\": 18.5596037, \"Y\": 53.0156193 }, { \"Name\": \"Dom Legend Toruńskich\", \"Description\": \"Dom Legend Toruńskich to miejsce będące połączeniem interaktywnego muzeum i teatru. We wnętrzu średniowiecznej piwnicy opowiadane tu są tradycyjne legendy toruńskie przekazywane ustnie z dziada pradziada.  Można tu spędzić czas słuchając opowieści przewodników albo czynnie uczestniczyć w opisywanych historiach.\", \"X\": 18.6038847, \"Y\": 53.0102119 }, { \"Name\": \"Bunkier-Wisłą\", \"Description\": \"Bunkier-Wisła w Toruniu – niemiecki schron przeciwlotniczy z okresu II wojny światowej, obecnie muzeum interaktywne w Toruniu.\", \"X\": 18.6017954, \"Y\": 53.00812 }, { \"Name\": \"Rzeźba Osiołka w Toruniu\", \"Description\": \"Figura osła nawiązuje do stosowanych w dawnym Toruniu kar za drobne i cięższe przewinienia, wymierzanych tutaj - w pobliżu odwachu - dla żołnierzy toruńskich sił zbrojnych.\", \"X\": 18.6030514, \"Y\": 53.0101886 }],\n    elements3: [],\n    history: [\n      // [{ \"Name\": \"Pomnik Mikołaja Kopernika\", \"Description\": \"Stojący w południowo-wschodnim narożniku staromiejskiego rynku pomnik Mikołaja Kopernika jest jednym z najważniejszych symboli Torunia.\", \"X\": 18.604488372802734, \"Y\": 53.010440826416016 }, { \"Name\": \"Muzeum Toruńskiego Piernika\", \"Description\": \"Muzeum Toruńskiego Piernika mieści się w najstarszej w Europie fabryce pierników należącej niegdyś do rodziny Weese.\", \"X\": 18.6063585, \"Y\": 53.0111911 }, { \"Name\": \"Toruń Plaza\", \"Description\": \"Centrum handlowe Toruń Plaza\", \"X\": 18.5596037, \"Y\": 53.0156193 }], [{ \"Name\": \"Dom Legend Toruńskich\", \"Description\": \"Dom Legend Toruńskich to miejsce będące połączeniem interaktywnego muzeum i teatru. We wnętrzu średniowiecznej piwnicy opowiadane tu są tradycyjne legendy toruńskie przekazywane ustnie z dziada pradziada.  Można tu spędzić czas słuchając opowieści przewodników albo czynnie uczestniczyć w opisywanych historiach.\", \"X\": 18.6038847, \"Y\": 53.0102119 }, { \"Name\": \"Bunkier-Wisłą\", \"Description\": \"Bunkier-Wisła w Toruniu – niemiecki schron przeciwlotniczy z okresu II wojny światowej, obecnie muzeum interaktywne w Toruniu.\", \"X\": 18.6017954, \"Y\": 53.00812 }, { \"Name\": \"Rzeźba Osiołka w Toruniu\", \"Description\": \"Figura osła nawiązuje do stosowanych w dawnym Toruniu kar za drobne i cięższe przewinienia, wymierzanych tutaj - w pobliżu odwachu - dla żołnierzy toruńskich sił zbrojnych.\", \"X\": 18.6030514, \"Y\": 53.0101886 }]\n    ],\n    currentHistoryIndex: 0,\n    idRt: [],\n    qBank: [\n      {\n        question: \"Ile pomnik ma lat?\",\n        answers: [\"100\", \"200\", \"300\", \"400\"],\n        correct: \"100\",\n        id: 0,\n\n      },\n      {\n        question: \"Jak test jest\",\n        answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\n        correct: \"Mikołaj\",\n        id: 1,\n\n      },\n      {\n        question: \"Jaką testowea\",\n        answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\n        correct: \"test\",\n        id: 2,\n\n      }, {\n        question: \"testowe pytanie2\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 3,\n\n      },\n      {\n        question: \"testowe pytanie3\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 4,\n\n      }, {\n        question: \"testowe pytanie4\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 5,\n      },\n      {\n        question: \"testowe pytanie5\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 6,\n      },],\n    qBank2: [\n      {\n        question: \"Ile pomnik ma lat?\",\n        answers: [\"100\", \"200\", \"300\", \"400\"],\n        correct: \"100\",\n        id: 0,\n\n      },\n      {\n        question: \"Jak test jest\",\n        answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\n        correct: \"Mikołaj\",\n        id: 1,\n\n      },\n      {\n        question: \"Jaką testowea\",\n        answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\n        correct: \"test\",\n        id: 2,\n\n      }, {\n        question: \"testowe pytanie2\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 3,\n\n      },\n      {\n        question: \"testowe pytanie3\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 4,\n\n      }, {\n        question: \"testowe pytanie4\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 5,\n      },\n      {\n        question: \"testowe pytanie5\",\n        answers: [\"tak\", \"nie\", \"co\", \"lol\"],\n        correct: \"tak\",\n        id: 6,\n      },],\n    trasy: [],\n    history2: [],\n    trasy2: []\n  };\n  // tutaj zapisujemy wpisy w historii\n  handleOnHistoryPush = (e) => {\n    // e.preventDefault();\n\n    // this.setState({ history: ([...this.state.history, this.state.elements]) });\n    this.setState({ elements: ([]), PointId: [] });\n    const newItem = {\n      UpdateList: [...this.state.PointId],\n      \"Name\": this.state.NameRoute,\n      \"Description\": this.state.Description\n\n    }\n    fetch(\"http://dearjean.ddns.net:44301/api/Points3/Change\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newItem)\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res)\n        this.setState({\n          history: [...this.state.history, res.Points3s]\n        })\n      })\n\n    // console.log(newItem)\n    // console.log(this.state.elements)\n\n  };\n  // dodajemy kolejny element do aktualnych elementów\n  appendElement = (Name, Description, X, Y, RouteId) => {\n    this.setState({\n      elements: ([...this.state.elements, { Name, Description, X, Y, RouteId }]),\n\n      // elements2: ([...this.state.elements2, { Name, Description, X, Y, RouteId }])\n    })\n    const newItem = {\n      \"Name\": Name,\n      \"Y\": Y,\n      \"X\": X,\n      \"RouteId\": 1,\n      \"Description\": Description\n    }\n    fetch(\"http://dearjean.ddns.net:44301/api/Points3\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newItem)\n    })\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          PointId: [...this.state.PointId, res.Id]\n        })\n      })\n\n\n  };\n  appendQuestion = (Quest, A, B, C, D, Good) => {\n    this.setState({\n      qBank: ([...this.state.qBank, {\n        question: Quest,\n        answers: [A, B, C, D],\n        correct: Good\n      }])\n    })\n  }\n\n  addItem2 = (e) => {\n    e.preventDefault();\n  }\n\n  // componentDidMount() {\n\n  //   const map = new mapboxgl.Map({\n  //     container: this.mapContainer,\n  //     style: 'mapbox://styles/mapbox/streets-v11',\n  //     center: [this.state.lng, this.state.lat],\n  //     zoom: this.state.zoom,\n  //   })\n\n  //   // fetch(`http://dearjean.ddns.net:44301/api/Routes`)\n  //   //   .then(response => {\n  //   //     if (response.ok) {\n  //   //       return response;\n  //   //     }\n  //   //     throw Error(response.status)\n  //   //   })\n  //   //   .then(response => response.json())\n  //   //   .then(data => (\n  //   //     // console.log(data.length)\n  //   //     this.setState({\n  //   //       idRt: [...this.state.idRt, ...data]\n  //   //     })\n  //   //   )\n\n  //   //   )\n  //   //   .catch(error => console.log(error))\n\n  //   fetch(`http://dearjean.ddns.net:44301/api/Points3/`)\n  //     .then(response => {\n  //       if (response.ok) {\n  //         return response;\n  //       }\n  //       throw Error(response.status)\n  //     })\n  //     .then(response => response.json())\n  //     .then(data => (\n  //       // console.log(data.length)\n  //       this.setState({\n  //         idRt: [...this.state.idRt, ...data]\n  //       })\n  //     )\n\n  //     )\n  //     .catch(error => console.log(error))\n  // }\n\n  addItem = (e) => {\n    e.preventDefault();\n    const newItem = {\n      \"Name\": this.state.Name,\n      \"Description\": this.state.Description,\n      \"Y\": parseFloat(this.state.X),\n      \"X\": parseFloat(this.state.Y),\n    };\n    this.setState(prevState => ({\n      items: [...prevState.items, newItem]\n    }));\n\n    const newItems = [...this.state.items, newItem]\n    this.setState({ newItems })\n    fetch(\"http://dearjean.ddns.net:44301/api/PointOnlies\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newItem)\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n      })\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n    })\n    var bounds = [\n      [18.11318691590263, 50.022222],\n      [18.90647886197926, 53.3331258]\n    ];\n    map.setMaxBounds(bounds);\n\n    // initialize the map canvas to interact with later\n    var canvas = map.getCanvasContainer();\n\n    // an arbitrary start will always be the same\n    // only the end or destination will change\n    start = [18.59436, 53.01011];\n    // this is where the code for the next step will go\n    // create a function to make a directions request\n    function getRoute(end) {\n      // make a directions request using cycling profile\n      // an arbitrary start will always be the same\n      // only the end or destination will change\n      // var start = [18.59436, 53.01011];\n      var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] +\n        ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;\n\n      // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.onload = function () {\n        var json = JSON.parse(req.response);\n        var data = json.routes[0];\n        var route = data.geometry.coordinates;\n        var geojson = {\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'LineString',\n            coordinates: route\n          }\n        };\n        // if the route already exists on the map, reset it using setData\n        if (map.getSource('route')) {\n          map.getSource('route').setData(geojson);\n        } else { // otherwise, make a new request\n          map.addLayer({\n            id: 'route',\n            type: 'line',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'LineString',\n                  coordinates: geojson\n                }\n              }\n            },\n            layout: {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            paint: {\n              'line-color': '#3887be',\n              'line-width': 5,\n              'line-opacity': 0.75\n            }\n          });\n        }\n        // get the sidebar and add the instructions\n        var instructions = document.getElementById('instructions');\n        var steps = data.legs[0].steps;\n\n        var tripInstructions = [];\n\n        for (var i = 0; i < steps.length; i++) {\n          tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n          instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration /\n            60) +\n            ' min 🚴 </span>' + tripInstructions.join(\"\");\n        }\n      };\n      req.send();\n    }\n\n    map.on('load', function () {\n      // make an initial directions request that\n      // starts and ends at the same location\n      getRoute(start);\n\n      // Add starting point to the map\n      map.addLayer({\n        id: 'point',\n        type: 'circle',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: [{\n              type: 'Feature',\n              properties: {},\n              geometry: {\n                type: 'Point',\n                coordinates: start\n              }\n            }]\n          }\n        },\n        paint: {\n          'circle-radius': 10,\n          'circle-color': 'black'\n        }\n      });\n      // this is where the code from the next step will go\n    });\n    map.on('click', function (e) {\n      var coordsObj = e.lngLat;\n      canvas.style.cursor = '';\n      var coords = Object.keys(coordsObj).map(function (key) {\n        return coordsObj[key];\n      });\n      var end = {\n        type: 'FeatureCollection',\n        features: [{\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'Point',\n            coordinates: coords\n          }\n        }]\n      };\n      if (map.getLayer('end')) {\n        map.getSource('end').setData(end);\n      } else {\n        map.addLayer({\n          id: 'end',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: coords\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 10,\n            'circle-color': '#f30'\n          }\n        }\n        );\n      }\n      getRoute(coords);\n      start = [coords[0], coords[1]]\n\n    });\n\n    map.addControl(new mapboxgl.FullscreenControl());\n    map.addControl(new mapboxgl.NavigationControl());\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }))\n    for (const obj of newItems) {\n      // var obj = this.state.items[i];\n\n      let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n      new mapboxgl.Marker()\n        .setLngLat(myLatlng)\n        .setPopup(new mapboxgl.Popup({ offset: 25 })\n          .setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p><button onclick=(function(){event.target.parentNode.remove()})();>This Button</button>'\n          ))\n        // <button onclick=(function(){event.target.parentNode.remove})();>This Button</button>\n\n        .addTo(map);\n    }\n    e.preventDefault();\n  }\n  handleFetch = (e) => {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n    })\n    const loopOverItems = () => {\n      for (var i = 0; i < this.state.items.length; i++) {\n        var obj = this.state.items[i];\n        let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n        new mapboxgl.Marker()\n          .setLngLat(myLatlng)\n          .setPopup(new mapboxgl.Popup({ offset: 25 })\n            .setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>'))\n          .addTo(map);\n      }\n    }\n    fetch('http://dearjean.ddns.net:44301/api/PointOnlies')\n      .then(resposne => {\n        if (resposne.ok) {\n          return resposne;\n        }\n        throw Error(resposne.status)\n      })\n      .then(response => response.json())\n      .then(data => this.setState({ items: data }, loopOverItems))\n      .catch(error => console.log(error))\n\n    var bounds = [\n      [18.11318691590263, 50.022222],\n      [18.90647886197926, 53.3331258]\n    ];\n    map.setMaxBounds(bounds);\n\n    // initialize the map canvas to interact with later\n    var canvas = map.getCanvasContainer();\n\n    // an arbitrary start will always be the same\n    // only the end or destination will change\n    start = [18.59436, 53.01011];\n    // this is where the code for the next step will go\n    // create a function to make a directions request\n    function getRoute(end) {\n      // make a directions request using cycling profile\n      // an arbitrary start will always be the same\n      // only the end or destination will change\n      // var start = [18.59436, 53.01011];\n      var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] +\n        ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;\n\n      // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.onload = function () {\n        var json = JSON.parse(req.response);\n        var data = json.routes[0];\n        var route = data.geometry.coordinates;\n        var geojson = {\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'LineString',\n            coordinates: route\n          }\n        };\n        // if the route already exists on the map, reset it using setData\n        if (map.getSource('route')) {\n          map.getSource('route').setData(geojson);\n        } else { // otherwise, make a new request\n          map.addLayer({\n            id: 'route',\n            type: 'line',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'LineString',\n                  coordinates: geojson\n                }\n              }\n            },\n            layout: {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            paint: {\n              'line-color': '#3887be',\n              'line-width': 5,\n              'line-opacity': 0.75\n            }\n          });\n        }\n        // get the sidebar and add the instructions\n        var instructions = document.getElementById('instructions');\n        var steps = data.legs[0].steps;\n\n        var tripInstructions = [];\n\n        for (var i = 0; i < steps.length; i++) {\n          tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n          instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration /\n            60) +\n            ' min 🚴 </span>' + tripInstructions.join(\"\");\n        }\n      };\n      req.send();\n    }\n\n    map.on('load', function () {\n      // make an initial directions request that\n      // starts and ends at the same location\n      getRoute(start);\n\n      // Add starting point to the map\n      map.addLayer({\n        id: 'point',\n        type: 'circle',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: [{\n              type: 'Feature',\n              properties: {},\n              geometry: {\n                type: 'Point',\n                coordinates: start\n              }\n            }]\n          }\n        },\n        paint: {\n          'circle-radius': 10,\n          'circle-color': 'black'\n        }\n      });\n      // this is where the code from the next step will go\n    });\n    map.on('click', function (e) {\n      var coordsObj = e.lngLat;\n      canvas.style.cursor = '';\n      var coords = Object.keys(coordsObj).map(function (key) {\n        return coordsObj[key];\n      });\n      var end = {\n        type: 'FeatureCollection',\n        features: [{\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'Point',\n            coordinates: coords\n          }\n        }]\n      };\n      if (map.getLayer('end')) {\n        map.getSource('end').setData(end);\n      } else {\n        map.addLayer({\n          id: 'end',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: coords\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 10,\n            'circle-color': '#f30'\n          }\n        }\n        );\n      }\n      getRoute(coords);\n      start = [coords[0], coords[1]]\n\n    });\n\n    map.addControl(new mapboxgl.FullscreenControl());\n    map.addControl(new mapboxgl.NavigationControl());\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }))\n\n    e.preventDefault();\n\n  }\n\n  handleSelect = (event) => {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: 15,\n    })\n    fetch(`http://dearjean.ddns.net:44301/api/Points3/RouteOnNumber?id=${this.state.currentHistoryIndex}&fbclid=IwAR2ZSVQ3WLxfVDrBgSvvejcxIm0lpE908_cm39yDAPah6LqJLqSLDLE-T_E`)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(response.status)\n      })\n      .then(response => response.json())\n      .then(data => this.setState({\n        // console.log(res)\n        // history: data\n        history: [...this.state.history, data]\n\n      })\n      )\n      .catch(error => console.log(error))\n    const loop = () => {\n      for (const obj of this.state.history[this.state.currentHistoryIndex]) {\n        // for (const obj of this.state.history) {\n        let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n        new mapboxgl.Marker()\n          .setLngLat(myLatlng)\n          .setPopup(new mapboxgl.Popup({ offset: 25 })\n            .setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>'\n            ))\n          .addTo(map);\n      }\n    }\n\n\n    this.setState({ currentHistoryIndex: event.currentTarget.value }, loop)\n\n\n    var bounds = [\n      [18.11318691590263, 50.022222],\n      [18.90647886197926, 53.3331258]\n    ];\n    map.setMaxBounds(bounds);\n\n    // initialize the map canvas to interact with later\n    var canvas = map.getCanvasContainer();\n\n    // an arbitrary start will always be the same\n    // only the end or destination will change\n    start = [18.59436, 53.01011];\n    // this is where the code for the next step will go\n    // create a function to make a directions request\n    function getRoute(end) {\n      // make a directions request using cycling profile\n      // an arbitrary start will always be the same\n      // only the end or destination will change\n      // var start = [18.59436, 53.01011];\n      var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] +\n        ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;\n\n      // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.onload = function () {\n        var json = JSON.parse(req.response);\n        var data = json.routes[0];\n        var route = data.geometry.coordinates;\n        var geojson = {\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'LineString',\n            coordinates: route\n          }\n        };\n        // if the route already exists on the map, reset it using setData\n        if (map.getSource('route')) {\n          map.getSource('route').setData(geojson);\n        } else { // otherwise, make a new request\n          map.addLayer({\n            id: 'route',\n            type: 'line',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'LineString',\n                  coordinates: geojson\n                }\n              }\n            },\n            layout: {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            paint: {\n              'line-color': '#3887be',\n              'line-width': 5,\n              'line-opacity': 0.75\n            }\n          });\n        }\n        // get the sidebar and add the instructions\n        var instructions = document.getElementById('instructions');\n        var steps = data.legs[0].steps;\n\n        var tripInstructions = [];\n\n        for (var i = 0; i < steps.length; i++) {\n          tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n          instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration /\n            60) +\n            ' min 🚴 </span>' + tripInstructions.join(\"\");\n        }\n      };\n      req.send();\n    }\n\n    map.on('load', function () {\n      // make an initial directions request that\n      // starts and ends at the same location\n      getRoute(start);\n\n      // Add starting point to the map\n      map.addLayer({\n        id: 'point',\n        type: 'circle',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: [{\n              type: 'Feature',\n              properties: {},\n              geometry: {\n                type: 'Point',\n                coordinates: start\n              }\n            }]\n          }\n        },\n        paint: {\n          'circle-radius': 10,\n          'circle-color': 'black'\n        }\n      });\n      // this is where the code from the next step will go\n    });\n    map.on('click', function (e) {\n      var coordsObj = e.lngLat;\n      canvas.style.cursor = '';\n      var coords = Object.keys(coordsObj).map(function (key) {\n        return coordsObj[key];\n      });\n      var end = {\n        type: 'FeatureCollection',\n        features: [{\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'Point',\n            coordinates: coords\n          }\n        }]\n      };\n      if (map.getLayer('end')) {\n        map.getSource('end').setData(end);\n      } else {\n        map.addLayer({\n          id: 'end',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: coords\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 2,\n            'circle-color': '#f30'\n          }\n        }\n        );\n      }\n      getRoute(coords);\n      start = [coords[0], coords[1]]\n\n    });\n\n    map.addControl(new mapboxgl.FullscreenControl());\n    map.addControl(new mapboxgl.NavigationControl());\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }))\n    event.preventDefault();\n  }\n\n  openModal = (id) => {\n    console.log(id)\n    this.setState({\n      isModalOpen: true,\n      isModalOpen2: false\n    })\n    const qBank = [...this.state.qBank];\n    const elements2 = [...this.state.elements2]\n    const index = qBank.findIndex(q => q.id === id)\n    const task = qBank.splice(index, 1)\n    elements2.splice(index, 1)\n    this.setState({\n      qBank: task,\n      elements2\n    })\n  }\n  closeModal = () => {\n    this.setState({\n\n      isModalOpen: false,\n      isModalOpen2: true,\n      qBank: this.state.qBank2,\n      responses: 0,\n      score: 0,\n    })\n\n  }\n\n  computeAnswer = (answer, correctAnswer) => {\n    if (answer === correctAnswer) {\n      this.setState({\n        score: this.state.score + 1,\n        point: this.state.point + 1\n      })\n    }\n    this.setState({\n      responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n    })\n  }\n  playAgain = () => {\n    const qBank = [\n      {\n        question: \"Ile pomnik ma lat?\",\n        answers: [\"100\", \"200\", \"300\", \"400\"],\n        correct: \"100\",\n        id: 0,\n\n      },\n      {\n        question: \"Jak test jest\",\n        answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\n        correct: \"Mikołaj\",\n        id: 1,\n\n      },\n      {\n        question: \"Jaką testowea\",\n        answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\n        correct: \"test\",\n        id: 2,\n\n      }]\n    this.setState({\n      responses: 0,\n      score: 0\n    })\n  }\n  openModal2 = () => {\n    this.setState({\n      isModalOpen2: true,\n    })\n  }\n  closeModal2 = () => {\n    this.setState({\n      isModalOpen2: false,\n    })\n  }\n  handleRoute = (e) => {\n    this.setState({\n      isModalOpen2: true,\n    })\n    fetch(`http://dearjean.ddns.net:44301/api/Routes`)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(response.status)\n      })\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          // console.log(data)\n          // history: data\n          trasy: [...this.state.trasy, ...data],\n          trasy2: [...this.state.trasy, ...data]\n\n        })\n      )\n      .catch(error => console.log(error))\n\n  }\n\n  myIp = (id) => {\n\n    console.log(id)\n    const newHistory2 = []\n    // console.log(this.state.idRt.RouteId)\n    for (const point of this.state.idRt) {\n      if (id === point.RouteId) {\n        // console.log(point.Name)\n        // console.log(point.RouteId)\n        newHistory2.push({\n          Name: point.Name,\n          Description: point.Description,\n          X: point.Y,\n          Y: point.X\n        });\n      }\n    }\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: 10,\n    })\n    const loop = () => {\n      for (const obj of this.state.history2) {\n        let myLatlng = new mapboxgl.LngLat(obj.Y, obj.X);\n        new mapboxgl.Marker()\n          .setLngLat(myLatlng)\n          .setPopup(new mapboxgl.Popup({ offset: 25 })\n            .setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>'\n            ))\n          .addTo(map);\n      }\n    }\n    this.setState({ history2: newHistory2 }, loop)\n    this.setState({\n      isModalOpen2: false,\n    })\n\n\n\n    var bounds = [\n      [18.11318691590263, 50.022222],\n      [18.90647886197926, 53.3331258]\n    ];\n    map.setMaxBounds(bounds);\n\n    // initialize the map canvas to interact with later\n    var canvas = map.getCanvasContainer();\n\n    // an arbitrary start will always be the same\n    // only the end or destination will change\n    start = [18.59436, 53.01011];\n    // this is where the code for the next step will go\n    // create a function to make a directions request\n    function getRoute(end) {\n      // make a directions request using cycling profile\n      // an arbitrary start will always be the same\n      // only the end or destination will change\n      // var start = [18.59436, 53.01011];\n      var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] +\n        ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;\n\n      // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.onload = function () {\n        var json = JSON.parse(req.response);\n        var data = json.routes[0];\n        var route = data.geometry.coordinates;\n        var geojson = {\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'LineString',\n            coordinates: route\n          }\n        };\n        // if the route already exists on the map, reset it using setData\n        if (map.getSource('route')) {\n          map.getSource('route').setData(geojson);\n        } else { // otherwise, make a new request\n          map.addLayer({\n            id: 'route',\n            type: 'line',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'LineString',\n                  coordinates: geojson\n                }\n              }\n            },\n            layout: {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            paint: {\n              'line-color': '#3887be',\n              'line-width': 5,\n              'line-opacity': 0.75\n            }\n          });\n        }\n        // get the sidebar and add the instructions\n        var instructions = document.getElementById('instructions');\n        var steps = data.legs[0].steps;\n\n        var tripInstructions = [];\n\n        for (var i = 0; i < steps.length; i++) {\n          tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n          instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration /\n            60) +\n            ' min 🚴 </span>' + tripInstructions.join(\"\");\n        }\n      };\n      req.send();\n    }\n\n    map.on('load', function () {\n      // make an initial directions request that\n      // starts and ends at the same location\n      getRoute(start);\n\n      // Add starting point to the map\n      map.addLayer({\n        id: 'point',\n        type: 'circle',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: [{\n              type: 'Feature',\n              properties: {},\n              geometry: {\n                type: 'Point',\n                coordinates: start\n              }\n            }]\n          }\n        },\n        paint: {\n          'circle-radius': 10,\n          'circle-color': 'black'\n        }\n      });\n      // this is where the code from the next step will go\n    });\n    map.on('click', function (e) {\n      var coordsObj = e.lngLat;\n      canvas.style.cursor = '';\n      var coords = Object.keys(coordsObj).map(function (key) {\n        return coordsObj[key];\n      });\n      var end = {\n        type: 'FeatureCollection',\n        features: [{\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'Point',\n            coordinates: coords\n          }\n        }]\n      };\n      if (map.getLayer('end')) {\n        map.getSource('end').setData(end);\n      } else {\n        map.addLayer({\n          id: 'end',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: coords\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 2,\n            'circle-color': '#f30'\n          }\n        }\n        );\n      }\n      getRoute(coords);\n      start = [coords[0], coords[1]]\n\n    });\n\n    map.addControl(new mapboxgl.FullscreenControl());\n    map.addControl(new mapboxgl.NavigationControl());\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }))\n\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.search.length === 0 && prevState.search.length === 0) {\n      fetch(`http://dearjean.ddns.net:44301/api/Routes`)\n        .then(response => {\n          if (response.ok) {\n            return response;\n          }\n          throw Error(response.status)\n        })\n        .then(response => response.json())\n        .then(data =>\n          this.setState({\n            trasy: [...data]\n          })\n        )\n        .catch(error => console.log(error))\n    }\n    if (prevState.search !== this.state.search) {\n      fetch(`http://dearjean.ddns.net:44301/api/Routes/Search?word=${this.state.search}`)\n        .then(response => {\n          if (response.ok) {\n            return response;\n          }\n          throw Error(response.status)\n        })\n        .then(response => response.json())\n        .then(data =>\n          // console.log(data)\n          this.setState({\n            // history: data\n            trasy: [...data]\n          })\n          // this.setState(prevState => ({\n          //   trasy: [prevState.data]\n          // }))\n        )\n        .catch(error => console.log(error))\n    }\n\n\n\n  }\n\n\n\n  render() {\n\n    return (\n      <>\n        <BrowserRouter >\n          <Switch>\n            {<Route exact path=\"/\" component={Welcome} />}\n            {<Route path=\"/home\" component={Home} />}\n            {<Route path=\"/login\" component={Login} />}\n            {<Route path=\"/Signup\" component={Signup} />}\n            {<Route path=\"*\" component={NotFound} />}\n          </Switch>\n        </BrowserRouter>\n\n\n\n      </>\n\n    )\n\n  }\n\n}\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}