{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\weather2\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport QuestionBox from \"./components2/questionBox\";\nimport Result from \"./components2/Result\";\nimport { Redirect } from 'react-router-dom';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = \"pk.eyJ1Ijoicm9iZXJ0MTk5NSIsImEiOiJjazhqZGQ4b2owN255M2VxcXBkaHp5cGowIn0.5oKYRrs_iAmrx2HfbpB-Hw\";\n\nvar MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\n\nvar start = [18.59436, 53.01011];\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      history3: [],\n      lng: 18.59436,\n      lat: 53.01011,\n      width: '100vw',\n      height: \"60vh\",\n      zoom: 9,\n      selectedPark: null,\n      isModalOpen: false,\n      isModalOpen2: false,\n      Name: '',\n      Description: '',\n      Y: 53.0331258,\n      X: 18.6355611,\n      search: '',\n      RouteId: 1,\n      Creator: false,\n      Image: '',\n      Quest: '',\n      A: '',\n      B: '',\n      C: '',\n      D: '',\n      Good: '',\n      NameRoute: '',\n      score: 0,\n      responses: 0,\n      result: 5,\n      point: 0,\n      PointId: [],\n      elements: [],\n      elements2: [],\n      elements3: [],\n      redirectToReferrer: false,\n      history: [],\n      idRt: [],\n      qBank: [],\n      trasy: [],\n      history2: [],\n      trasy2: [],\n      ranking: [],\n      RouteId2: '',\n      isModalOpen3: false,\n      isModalOpen4: false,\n      isModalRanking: false,\n      Point: '',\n      activeButton: true\n    };\n\n    this.handleOnHistoryPush = e => {\n      this.setState({\n        elements: [],\n        PointId: []\n      });\n      const newItem = {\n        UpdateList: [...this.state.PointId],\n        \"Name\": this.state.NameRoute,\n        \"Description\": this.state.Description\n      };\n      fetch(\"http://dearjean.ddns.net:44301/api/Points3/Change\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n        },\n        body: JSON.stringify(newItem)\n      }).then(res => res.json()).then(res => {\n        // console.log(res)\n        this.setState({\n          history: [...this.state.history, res.Points3s]\n        });\n        alert(\"utworzyles\");\n      });\n    };\n\n    this.appendElement = (Name, Description, X, Y, RouteId) => {\n      this.setState({\n        activeButton: false\n      });\n      const newItem = {\n        \"Name\": Name,\n        \"Y\": Y,\n        \"X\": X,\n        \"RouteId\": 1,\n        \"Description\": Description\n      };\n      fetch(\"http://dearjean.ddns.net:44301/api/Points3\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n        },\n        body: JSON.stringify(newItem)\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          PointId: [...this.state.PointId, res.Id]\n        });\n        console.log(res);\n        this.setState({\n          activeButton: true\n        });\n      });\n      this.setState({\n        elements: [...this.state.elements, {\n          Name,\n          Description,\n          X,\n          Y,\n          RouteId\n        }]\n      });\n    };\n\n    this.appendQuestion = (Quest, A, B, C, D, Good, RouteId2) => {\n      const newItem = {\n        \"Question1\": Quest,\n        \"Answers\": [A, B, C, D],\n        \"Correct\": Good,\n        \"RouteId\": this.state.RouteId2\n      };\n      fetch(\"http://dearjean.ddns.net:44301/api/AnswerAndQuestion2\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n        },\n        body: JSON.stringify(newItem)\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          qBank: [...this.state.qBank, {\n            Question1: res.Question1,\n            Answers: [...res.Answers],\n            Correct: res.Correct,\n            RouteId: res.RouteId\n          }]\n        });\n        console.log(res);\n      });\n    };\n\n    this.addItem2 = e => {\n      e.preventDefault();\n    };\n\n    this.openModal = id => {\n      console.log(id);\n      this.setState({\n        isModalOpen: true,\n        isModalOpen2: false\n      });\n      const qBank = [...this.state.qBank];\n      const elements2 = [...this.state.elements2];\n      const index = qBank.findIndex(q => q.id === id);\n      const task = qBank.splice(index, 1);\n      elements2.splice(index, 1);\n      this.setState({\n        qBank: task,\n        elements2\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isModalOpen: false,\n        isModalOpen2: true,\n        qBank: this.state.qBank2,\n        responses: 0,\n        score: 0\n      });\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === correctAnswer) {\n        this.setState({\n          score: this.state.score + 1\n        });\n        fetch(`http://dearjean.ddns.net:44301/api/Rewards/Get50`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n          }\n        }).then(response => {\n          if (response.ok) {\n            return response;\n          }\n\n          throw Error(response.status);\n        }).then(response => response.json()).then(data => {\n          if (data.Punkty >= 500) {\n            this.setState({\n              Creator: true\n            });\n            alert(`Brawo uzyskałeś ${data.Punkty} punktów. Zostałes creatorem`);\n          }\n        }).catch(error => console.log(error));\n      } // )\n      // }\n\n    };\n\n    this.playAgain = () => {\n      const qBank = [{\n        question: \"Ile pomnik ma lat?\",\n        answers: [\"100\", \"200\", \"300\", \"400\"],\n        correct: \"100\",\n        id: 0\n      }, {\n        question: \"Jak test jest\",\n        answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\n        correct: \"Mikołaj\",\n        id: 1\n      }, {\n        question: \"Jaką testowea\",\n        answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\n        correct: \"test\",\n        id: 2\n      }];\n      this.setState({\n        responses: 0,\n        score: 0\n      });\n    };\n\n    this.openModal2 = () => {\n      this.setState({\n        isModalOpen2: true\n      });\n    };\n\n    this.closeModal2 = () => {\n      this.setState({\n        isModalOpen2: false\n      });\n    };\n\n    this.closeModal4 = () => {\n      this.setState({\n        isModalOpen4: false\n      });\n    };\n\n    this.closeModalRanking = () => {\n      this.setState({\n        isModalRanking: false\n      });\n    };\n\n    this.closeModalProfile = () => {\n      this.setState({\n        isModalProfile: false\n      });\n    };\n\n    this.handleRoute = e => {\n      this.setState({\n        history2: []\n      });\n      fetch(`http://dearjean.ddns.net:44301/api/Points3/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        idRt: [...this.state.idRt, ...data]\n      })).catch(error => console.log(error));\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: this.state.zoom\n      });\n      this.setState({\n        isModalOpen2: true\n      });\n      fetch(`http://dearjean.ddns.net:44301/api/Routes/`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        // trasy: [...this.state.trasy, ...data],\n        trasy2: [...this.state.trasy, ...data]\n      })).catch(error => console.log(error));\n    };\n\n    this.handleRanking = e => {\n      this.setState({\n        isModalRanking: true\n      });\n      fetch(`http://dearjean.ddns.net:44301/api/Rewards/`, {\n        method: \"get\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          ranking: [...data]\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.handleProfile = e => {\n      this.setState({\n        ranking: []\n      });\n      this.setState({\n        isModalProfile: true\n      });\n      fetch(`http://dearjean.ddns.net:44301/api/Account/UserInfo/`, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        // trasy: [...this.state.trasy, ...data],\n        user: [...data]\n      })).catch(error => console.log(error));\n    };\n\n    this.myIp = id => {\n      console.log(id);\n      const newHistory2 = []; // console.log(this.state.idRt.RouteId)\n\n      for (const point of this.state.idRt) {\n        if (id === point.RouteId) {\n          // console.log(point.Name)\n          // console.log(point.RouteId)\n          newHistory2.push({\n            Name: point.Name,\n            Description: point.Description,\n            X: point.Y,\n            Y: point.X\n          });\n        }\n      }\n\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: 10\n      });\n\n      const loop = () => {\n        for (const obj of this.state.history2) {\n          let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n          new mapboxgl.Marker().setLngLat(myLatlng).setPopup(new mapboxgl.Popup({\n            offset: 25\n          }).setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>')).addTo(map);\n        }\n      };\n\n      this.setState({\n        history2: newHistory2\n      }, loop);\n      this.setState({\n        isModalOpen2: false,\n        isModalOpen4: false\n      });\n      var bounds = [[18.11318691590263, 50.022222], [18.90647886197926, 53.3331258]];\n      map.setMaxBounds(bounds); // initialize the map canvas to interact with later\n\n      var canvas = map.getCanvasContainer(); // an arbitrary start will always be the same\n      // only the end or destination will change\n\n      start = [18.59436, 53.01011]; // this is where the code for the next step will go\n      // create a function to make a directions request\n\n      function getRoute(end) {\n        // make a directions request using cycling profile\n        // an arbitrary start will always be the same\n        // only the end or destination will change\n        // var start = [18.59436, 53.01011];\n        var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken; // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n\n        req.onload = function () {\n          var json = JSON.parse(req.response);\n          var data = json.routes[0];\n          var route = data.geometry.coordinates;\n          var geojson = {\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'LineString',\n              coordinates: route\n            }\n          }; // if the route already exists on the map, reset it using setData\n\n          if (map.getSource('route')) {\n            map.getSource('route').setData(geojson);\n          } else {\n            // otherwise, make a new request\n            map.addLayer({\n              id: 'route',\n              type: 'line',\n              source: {\n                type: 'geojson',\n                data: {\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'LineString',\n                    coordinates: geojson\n                  }\n                }\n              },\n              layout: {\n                'line-join': 'round',\n                'line-cap': 'round'\n              },\n              paint: {\n                'line-color': '#3887be',\n                'line-width': 5,\n                'line-opacity': 0.75\n              }\n            });\n          } // get the sidebar and add the instructions\n          // var instructions = document.getElementById('instructions');\n          // var steps = data.legs[0].steps;\n          // var tripInstructions = [];\n          // for (var i = 0; i < steps.length; i++) {\n          //     tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\n          //     instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration /\n          //         60) +\n          //         ' min 🚴 </span>' + tripInstructions.join(\"\");\n          // }\n\n        };\n\n        req.send();\n      }\n\n      map.on('load', function () {\n        // make an initial directions request that\n        // starts and ends at the same location\n        getRoute(start); // Add starting point to the map\n\n        map.addLayer({\n          id: 'point',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: {\n                  type: 'Point',\n                  coordinates: start\n                }\n              }]\n            }\n          },\n          paint: {\n            'circle-radius': 10,\n            'circle-color': 'black'\n          }\n        }); // this is where the code from the next step will go\n      });\n      map.on('click', function (e) {\n        var coordsObj = e.lngLat;\n        canvas.style.cursor = '';\n        var coords = Object.keys(coordsObj).map(function (key) {\n          return coordsObj[key];\n        });\n        var end = {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'Point',\n              coordinates: coords\n            }\n          }]\n        };\n\n        if (map.getLayer('end')) {\n          map.getSource('end').setData(end);\n        } else {\n          map.addLayer({\n            id: 'end',\n            type: 'circle',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'FeatureCollection',\n                features: [{\n                  type: 'Feature',\n                  properties: {},\n                  geometry: {\n                    type: 'Point',\n                    coordinates: coords\n                  }\n                }]\n              }\n            },\n            paint: {\n              'circle-radius': 2,\n              'circle-color': '#f30'\n            }\n          });\n        }\n\n        getRoute(coords);\n        start = [coords[0], coords[1]];\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.addControl(new mapboxgl.NavigationControl());\n      map.addControl(new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true\n      }));\n    };\n\n    this.logout = () => {\n      console.log(\"logout\");\n      sessionStorage.setItem('access_token', '');\n      sessionStorage.clear();\n      this.setState({\n        redirectToReferrer: true\n      });\n    };\n\n    this.openModal3 = () => {\n      this.setState({\n        isModalOpen3: true\n      });\n    };\n\n    this.closeModal3 = () => {\n      fetch(`http://dearjean.ddns.net:44301/api/AnswerAndQuestion2`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        // gBank: ([...this.state.qBank, {\n        //     Question1: data.Question1,\n        //     Answers: [...data.Answers],\n        //     Correct: data.Correct,\n        //     RouteId: data.RouteId\n        // }])\n        qBank: [...this.state.qBank, ...data]\n      }) // console.log(data)\n      ).catch(error => console.log(error));\n      this.setState({\n        isModalOpen3: false,\n        isModalOpen2: false\n      });\n    };\n\n    this.MyRoute = () => {\n      this.setState({\n        trasy: []\n      });\n      fetch(`http://dearjean.ddns.net:44301/api/Routes/GetMine`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        trasy: [...this.state.trasy, ...data] // trasy2: [...this.state.trasy, ...data]\n\n      }) // console.log(data)\n      ).catch(error => console.log(error));\n      this.setState({\n        isModalOpen4: true\n      });\n    };\n\n    this.myIp2 = id => {\n      console.log(id);\n      const newHistory3 = []; // console.log(this.state.idRt.RouteId)\n\n      for (const point of this.state.idRt) {\n        if (id === point.RouteId) {\n          // console.log(point.Name)\n          // console.log(point.RouteId)\n          newHistory3.push({\n            Name: point.Name,\n            Description: point.Description,\n            X: point.Y,\n            Y: point.X\n          });\n        }\n      }\n\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.state.lng, this.state.lat],\n        zoom: 10\n      });\n\n      const loop = () => {\n        for (const obj of this.state.history3) {\n          let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\n          new mapboxgl.Marker().setLngLat(myLatlng).setPopup(new mapboxgl.Popup({\n            offset: 25\n          }).setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>')).addTo(map);\n        }\n      };\n\n      this.setState({\n        history3: newHistory3\n      }, loop);\n      this.setState({\n        isModalOpen2: false,\n        isModalOpen4: false\n      });\n    };\n\n    this.deleteTask = id => {\n      console.log(id);\n      const tasks = [...this.state.trasy];\n      console.log(tasks);\n      const index = tasks.findIndex(task => task.Id === id);\n      tasks.splice(index, 1);\n      console.log(tasks);\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n\n    if (sessionStorage.getItem('access_token')) {\n      console.log('feel');\n    } else {\n      this.setState({\n        redirectToReferrer: true\n      });\n    }\n\n    fetch(`http://dearjean.ddns.net:44301/api/Points3/`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response;\n      }\n\n      throw Error(response.status);\n    }).then(response => response.json()).then(data => this.setState({\n      idRt: [...this.state.idRt, ...data]\n    })).catch(error => console.log(error));\n    fetch(`http://dearjean.ddns.net:44301/api/Rewards/GetMine`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response;\n      }\n\n      throw Error(response.status);\n    }).then(response => response.json()).then(data => {\n      if (data.Punkty >= 500 || data.Roles[0] === \"Creator\") {\n        this.setState({\n          Creator: true\n        });\n      }\n\n      this.setState({\n        Point: data.Punkty\n      });\n      console.log(data);\n    }).catch(error => console.log(error));\n    fetch(`http://dearjean.ddns.net:44301/api/AnswerAndQuestion2`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response;\n      }\n\n      throw Error(response.status);\n    }).then(response => response.json()).then(data => this.setState({\n      // gBank: ([...this.state.qBank, {\n      //     Question1: data.Question1,\n      //     Answers: [...data.Answers],\n      //     Correct: data.Correct,\n      //     RouteId: data.RouteId\n      // }])\n      qBank: [...this.state.qBank, ...data]\n    }) // console.log(data)\n    ).catch(error => console.log(error));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.search.length === 0) {\n      fetch(`http://dearjean.ddns.net:44301/api/Routes`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        trasy2: [...data]\n      })).catch(error => console.log(error));\n    }\n\n    if (prevState.search !== this.state.search) {\n      fetch(`http://dearjean.ddns.net:44301/api/Routes/Search?word=${this.state.search}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => this.setState({\n        trasy2: [...data]\n      })).catch(error => console.log(error));\n    }\n  }\n\n  gameIp(id) {\n    console.log(id);\n    this.setState({\n      isModalOpen3: true\n    });\n    const newQuestion2 = [];\n\n    for (const point of this.state.qBank) {\n      if (id === point.RouteId) {\n        console.log('tre');\n        newQuestion2.push({\n          question: point.Question1,\n          answers: [...point.Answers],\n          correct: point.Correct,\n          id: point.Id\n        });\n      }\n    }\n\n    this.setState({\n      qBank: newQuestion2\n    }); // console.log(newQuestion2)\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: '/login',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 21\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleRoute,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 17\n      }\n    }, \"Wszystkie trasy\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleRanking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 17\n      }\n    }, \"Ranking u\\u017Cykownik\\xF3w\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 17\n      }\n    }, \"M\\xF3j profil\"), this.state.Creator && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.MyRoute,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 40\n      }\n    }, \"Moje trasy\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.logout,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 21\n      }\n    }, \"Wyloguj si\\u0119\")), this.state.Point >= 500 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 44\n      }\n    }, `Witaj obecnie masz: ${this.state.Point} punktów`) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 107\n      }\n    }, `Witaj obecnie masz: ${this.state.Point} punktów, uzyskaj 500 punktów, a sam zostaniesz kreatorem tras!`), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper tiitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 17\n      }\n    }, this.state.Creator && /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addItem2,\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Podaj nazwe trasy\",\n      value: this.state.NameRoute,\n      onChange: e => this.setState({\n        NameRoute: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Podaj nazwe punktu..\",\n      value: this.state.Name,\n      onChange: e => this.setState({\n        Name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      // required\n      className: \"lefcik\",\n      type: \"text\",\n      rows: \"5\",\n      cols: \"33\",\n      placeholder: \"Opis..\",\n      value: this.state.Description,\n      onChange: e => this.setState({\n        Description: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"number\",\n      placeholder: \"D\\u0142ugo\\u015B\\u0107\",\n      value: this.state.X,\n      onChange: e => this.setState({\n        X: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik \",\n      type: \"number\",\n      placeholder: \"Szerokosc\",\n      value: this.state.Y,\n      onChange: e => this.setState({\n        Y: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 29\n      }\n    }, this.state.activeButton ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => this.appendElement(this.state.Name, this.state.Description, this.state.Y, this.state.X, this.state.RouteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 60\n      }\n    }, \"Dodaj punkt\") : /*#__PURE__*/React.createElement(\"button\", {\n      disabled: true,\n      className: \"btn\",\n      onClick: () => this.appendElement(this.state.Name, this.state.Description, this.state.Y, this.state.X, this.state.RouteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 231\n      }\n    }, \"Dodaj punkt\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleOnHistoryPush,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 33\n      }\n    }, \"Utw\\xF3rz tras\\u0119\"), /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 33\n      }\n    }, this.state.elements.map((element, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      key: element.index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 45\n      }\n    }, `${element.Name}`)))))))), this.state.Creator && /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addItem2,\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Zadaj pytanie..\",\n      value: this.state.Quest,\n      onChange: e => this.setState({\n        Quest: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Przyk\\u0142adowa odpowied\\u017A\",\n      value: this.state.A,\n      onChange: e => this.setState({\n        A: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Przyk\\u0142adowa odpowied\\u017A\",\n      value: this.state.B,\n      onChange: e => this.setState({\n        B: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Przyk\\u0142adowa odpowied\\u017A\",\n      value: this.state.C,\n      onChange: e => this.setState({\n        C: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Przyk\\u0142adowa odpowied\\u017A\",\n      value: this.state.D,\n      onChange: e => this.setState({\n        D: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"text\",\n      placeholder: \"Poprawna odpowied\\u017A\",\n      value: this.state.Good,\n      onChange: e => this.setState({\n        Good: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      // required\n      className: \"lefcik\",\n      type: \"number\",\n      placeholder: \"Numer trasy..\",\n      value: this.state.RouteId2,\n      onChange: e => this.setState({\n        RouteId2: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => this.appendQuestion(this.state.Quest, this.state.A, this.state.B, this.state.C, this.state.D, this.state.Good, this.state.RouteId2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 21\n      }\n    }, \"Wy\\u015Blij zagadk\\u0119\")), this.state.isModalOpen && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closeButton\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 25\n      }\n    }, \"Quiz\"), this.state.qBank.length > 0 && this.state.responses < 1 && this.state.qBank.map(({\n      question,\n      answers,\n      correct,\n      id\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      key: id,\n      question: question,\n      options: answers,\n      selected: answer => this.computeAnswer(answer, correct),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 37\n      }\n    })), this.state.responses === 1 ? /*#__PURE__*/React.createElement(Result, {\n      addItem2: this.addItem2,\n      score: this.state.score,\n      playAgain: this.playAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 56\n      }\n    }) : null), this.state.isModalOpen2 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closeButton\",\n      onClick: this.closeModal2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 25\n      }\n    }, \"Wszystkie trasy\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"lefcik searching\",\n      type: \"text\",\n      placeholder: \"Szukaj..\",\n      value: this.state.search,\n      onChange: e => this.setState({\n        search: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 25\n      }\n    }, this.state.trasy2.map(historyRecord => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => this.myIp(historyRecord.Id),\n        key: historyRecord.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 37\n        }\n      }, `Nazwa nr ${historyRecord.Id}: ${historyRecord.Name}`), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.gameIp(historyRecord.Id),\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 198\n        }\n      }, \"Zagraj\"));\n    }))), this.state.isModalRanking && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closeButton\",\n      onClick: this.closeModalRanking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 25\n      }\n    }, \"Ranking U\\u017Cytkownik\\xF3w\"), /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 29\n      }\n    }, this.state.ranking.map(historyRecord => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 37\n        }\n      }, \" \", `Użytkownik: ${historyRecord.Email} Liczba punktów: ${historyRecord.Punkty}`));\n    }))), this.state.isModalProfile && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closeButton\",\n      onClick: this.closeModalProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 25\n      }\n    }, \"Profil\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 29\n      }\n    }, this.state.ranking.map(historyRecord => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 36\n        }\n      }, `Nazwa użytkownika: ${historyRecord.Id} Liczba punktów: ${historyRecord.Punkty}`));\n    }))), this.state.isModalOpen4 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closeButton\",\n      onClick: this.closeModal4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 25\n      }\n    }, \"Moje trasy\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"lefcik searching\",\n      type: \"text\",\n      placeholder: \"Szukaj..\",\n      value: this.state.search,\n      onChange: e => this.setState({\n        search: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1156,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 25\n      }\n    }, this.state.trasy.map((historyRecord, id) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => this.myIp2(historyRecord.Id),\n        key: historyRecord.Id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 37\n        }\n      }, `Nazwa nr ${historyRecord.Id}: ${historyRecord.Name}`), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteTask(historyRecord.Id),\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 199\n        }\n      }, \"Usu\\u0144\"));\n    }))), this.state.isModalOpen3 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closeButton\",\n      onClick: this.closeModal3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1182,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 25\n      }\n    }, \"Quiz\"), this.state.qBank.map(({\n      question,\n      answers,\n      correct,\n      id\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      key: id,\n      question: question,\n      options: answers,\n      selected: Answers => this.computeAnswer(Answers, correct),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Result, {\n      addItem2: this.addItem2,\n      score: this.state.score,\n      playAgain: this.playAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 26\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/user/Desktop/weather2/src/components/Home.js"],"names":["React","Component","QuestionBox","Result","Redirect","mapboxgl","accessToken","MapboxGeocoder","require","start","Home","state","history3","lng","lat","width","height","zoom","selectedPark","isModalOpen","isModalOpen2","Name","Description","Y","X","search","RouteId","Creator","Image","Quest","A","B","C","D","Good","NameRoute","score","responses","result","point","PointId","elements","elements2","elements3","redirectToReferrer","history","idRt","qBank","trasy","history2","trasy2","ranking","RouteId2","isModalOpen3","isModalOpen4","isModalRanking","Point","activeButton","handleOnHistoryPush","e","setState","newItem","UpdateList","fetch","method","headers","sessionStorage","getItem","body","JSON","stringify","then","res","json","Points3s","alert","appendElement","Id","console","log","appendQuestion","Question1","Answers","Correct","addItem2","preventDefault","openModal","id","index","findIndex","q","task","splice","closeModal","qBank2","computeAnswer","answer","correctAnswer","response","ok","Error","status","data","Punkty","catch","error","playAgain","question","answers","correct","openModal2","closeModal2","closeModal4","closeModalRanking","closeModalProfile","isModalProfile","handleRoute","map","Map","container","mapContainer","style","center","handleRanking","handleProfile","user","myIp","newHistory2","push","loop","obj","myLatlng","LngLat","Marker","setLngLat","setPopup","Popup","offset","setHTML","addTo","bounds","setMaxBounds","canvas","getCanvasContainer","getRoute","end","url","req","XMLHttpRequest","open","onload","parse","routes","route","geometry","coordinates","geojson","type","properties","getSource","setData","addLayer","source","layout","paint","send","on","features","coordsObj","lngLat","cursor","coords","Object","keys","key","getLayer","addControl","FullscreenControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","logout","setItem","clear","openModal3","closeModal3","MyRoute","myIp2","newHistory3","deleteTask","tasks","componentDidMount","Roles","componentDidUpdate","prevProps","prevState","length","gameIp","newQuestion2","render","el","target","value","display","flexDirection","listStyle","element","historyRecord","Email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport QuestionBox from \"./components2/questionBox\";\r\nimport Result from \"./components2/Result\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = \"pk.eyJ1Ijoicm9iZXJ0MTk5NSIsImEiOiJjazhqZGQ4b2owN255M2VxcXBkaHp5cGowIn0.5oKYRrs_iAmrx2HfbpB-Hw\";\r\nvar MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\r\nvar start = [18.59436, 53.01011];\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        history3: [],\r\n        lng: 18.59436,\r\n        lat: 53.01011,\r\n        width: '100vw',\r\n        height: \"60vh\",\r\n        zoom: 9,\r\n        selectedPark: null,\r\n        isModalOpen: false,\r\n        isModalOpen2: false,\r\n        Name: '',\r\n        Description: '',\r\n        Y: 53.0331258,\r\n        X: 18.6355611,\r\n        search: '',\r\n        RouteId: 1,\r\n        Creator: false,\r\n        Image: '',\r\n        Quest: '',\r\n        A: '',\r\n        B: '',\r\n        C: '',\r\n        D: '',\r\n        Good: '',\r\n        NameRoute: '',\r\n        score: 0,\r\n        responses: 0,\r\n        result: 5,\r\n        point: 0,\r\n        PointId: [],\r\n        elements: [],\r\n        elements2: [],\r\n        elements3: [],\r\n        redirectToReferrer: false,\r\n        history: [],\r\n        idRt: [],\r\n        qBank: [],\r\n        trasy: [],\r\n        history2: [],\r\n        trasy2: [],\r\n        ranking: [],\r\n        RouteId2: '',\r\n        isModalOpen3: false,\r\n        isModalOpen4: false,\r\n        isModalRanking: false,\r\n        Point: '',\r\n        activeButton: true\r\n    };\r\n    // tutaj zapisujemy wpisy w historii\r\n    handleOnHistoryPush = (e) => {\r\n        this.setState({ elements: ([]), PointId: [] });\r\n        const newItem = {\r\n            UpdateList: [...this.state.PointId],\r\n            \"Name\": this.state.NameRoute,\r\n            \"Description\": this.state.Description\r\n\r\n        }\r\n        fetch(\"http://dearjean.ddns.net:44301/api/Points3/Change\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            },\r\n            body: JSON.stringify(newItem)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                // console.log(res)\r\n                this.setState({\r\n                    history: [...this.state.history, res.Points3s]\r\n\r\n                })\r\n                alert(\"utworzyles\")\r\n            }\r\n            )\r\n\r\n\r\n    };\r\n    // dodajemy kolejny element do aktualnych elementów\r\n    appendElement = (Name, Description, X, Y, RouteId) => {\r\n        this.setState({ activeButton: false })\r\n        const newItem = {\r\n            \"Name\": Name,\r\n            \"Y\": Y,\r\n            \"X\": X,\r\n            \"RouteId\": 1,\r\n            \"Description\": Description\r\n        }\r\n        fetch(\"http://dearjean.ddns.net:44301/api/Points3\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            },\r\n            body: JSON.stringify(newItem)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    PointId: [...this.state.PointId, res.Id]\r\n                })\r\n                console.log(res)\r\n                this.setState({ activeButton: true })\r\n            })\r\n        this.setState({\r\n            elements: ([...this.state.elements, { Name, Description, X, Y, RouteId }]),\r\n        })\r\n\r\n\r\n    };\r\n\r\n    appendQuestion = (Quest, A, B, C, D, Good, RouteId2) => {\r\n\r\n        const newItem = {\r\n            \"Question1\": Quest,\r\n            \"Answers\": [A, B, C, D],\r\n            \"Correct\": Good,\r\n            \"RouteId\": this.state.RouteId2,\r\n        }\r\n        fetch(\"http://dearjean.ddns.net:44301/api/AnswerAndQuestion2\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            },\r\n            body: JSON.stringify(newItem)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({\r\n                    qBank: ([...this.state.qBank, {\r\n                        Question1: res.Question1,\r\n                        Answers: [...res.Answers],\r\n                        Correct: res.Correct,\r\n                        RouteId: res.RouteId\r\n                    }])\r\n\r\n                })\r\n                console.log(res)\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n    addItem2 = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom,\r\n        })\r\n        if (sessionStorage.getItem('access_token')) {\r\n            console.log('feel')\r\n        } else {\r\n            this.setState({\r\n                redirectToReferrer: true\r\n            })\r\n        }\r\n\r\n        fetch(`http://dearjean.ddns.net:44301/api/Points3/`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                this.setState({\r\n                    idRt: [...this.state.idRt, ...data]\r\n                })\r\n            )\r\n\r\n            )\r\n            .catch(error => console.log(error))\r\n\r\n        fetch(`http://dearjean.ddns.net:44301/api/Rewards/GetMine`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.Punkty >= 500 || data.Roles[0] === \"Creator\") {\r\n                    this.setState({\r\n                        Creator: true,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    Point: data.Punkty\r\n                })\r\n                console.log(data)\r\n\r\n            }\r\n\r\n\r\n\r\n            )\r\n            .catch(error => console.log(error))\r\n\r\n        fetch(`http://dearjean.ddns.net:44301/api/AnswerAndQuestion2`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                this.setState({\r\n                    // gBank: ([...this.state.qBank, {\r\n                    //     Question1: data.Question1,\r\n                    //     Answers: [...data.Answers],\r\n                    //     Correct: data.Correct,\r\n                    //     RouteId: data.RouteId\r\n                    // }])\r\n                    qBank: [...this.state.qBank, ...data]\r\n                })\r\n                // console.log(data)\r\n            )\r\n\r\n            )\r\n            .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    openModal = (id) => {\r\n        console.log(id)\r\n        this.setState({\r\n            isModalOpen: true,\r\n            isModalOpen2: false\r\n        })\r\n        const qBank = [...this.state.qBank];\r\n        const elements2 = [...this.state.elements2]\r\n        const index = qBank.findIndex(q => q.id === id)\r\n        const task = qBank.splice(index, 1)\r\n        elements2.splice(index, 1)\r\n        this.setState({\r\n            qBank: task,\r\n            elements2\r\n        })\r\n    }\r\n    closeModal = () => {\r\n        this.setState({\r\n\r\n            isModalOpen: false,\r\n            isModalOpen2: true,\r\n            qBank: this.state.qBank2,\r\n            responses: 0,\r\n            score: 0,\r\n        })\r\n\r\n    }\r\n\r\n    computeAnswer = (answer, correctAnswer) => {\r\n        if (answer === correctAnswer) {\r\n            this.setState({\r\n                score: this.state.score + 1,\r\n            })\r\n\r\n            fetch(`http://dearjean.ddns.net:44301/api/Rewards/Get50`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    throw Error(response.status)\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.Punkty >= 500) {\r\n                        this.setState({ Creator: true })\r\n                        alert(`Brawo uzyskałeś ${data.Punkty} punktów. Zostałes creatorem`)\r\n                    }\r\n                }\r\n                )\r\n                .catch(error => console.log(error))\r\n        }\r\n        // )\r\n        // }\r\n\r\n    }\r\n    playAgain = () => {\r\n        const qBank = [\r\n            {\r\n                question: \"Ile pomnik ma lat?\",\r\n                answers: [\"100\", \"200\", \"300\", \"400\"],\r\n                correct: \"100\",\r\n                id: 0,\r\n\r\n            },\r\n            {\r\n                question: \"Jak test jest\",\r\n                answers: [\"Mikołaj\", \"Tomasz\", \"Arek\", \"Bartosz\"],\r\n                correct: \"Mikołaj\",\r\n                id: 1,\r\n\r\n            },\r\n            {\r\n                question: \"Jaką testowea\",\r\n                answers: [\"test\", \"fajna\", \"smutną\", \"głupią\"],\r\n                correct: \"test\",\r\n                id: 2,\r\n\r\n            }]\r\n        this.setState({\r\n            responses: 0,\r\n            score: 0\r\n        })\r\n    }\r\n    openModal2 = () => {\r\n        this.setState({\r\n            isModalOpen2: true,\r\n        })\r\n    }\r\n    closeModal2 = () => {\r\n        this.setState({\r\n            isModalOpen2: false,\r\n        })\r\n    }\r\n    closeModal4 = () => {\r\n        this.setState({\r\n            isModalOpen4: false,\r\n        })\r\n    }\r\n    closeModalRanking = () => {\r\n        this.setState({\r\n            isModalRanking: false,\r\n        })\r\n    }\r\n    closeModalProfile = () => {\r\n        this.setState({\r\n            isModalProfile: false,\r\n        })\r\n    }\r\n    handleRoute = (e) => {\r\n        this.setState({ history2: [] })\r\n        fetch(`http://dearjean.ddns.net:44301/api/Points3/`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                this.setState({\r\n                    idRt: [...this.state.idRt, ...data]\r\n                })\r\n            )\r\n\r\n            )\r\n            .catch(error => console.log(error))\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom,\r\n        })\r\n\r\n        this.setState({\r\n            isModalOpen2: true,\r\n        })\r\n        fetch(`http://dearjean.ddns.net:44301/api/Routes/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({\r\n                    // trasy: [...this.state.trasy, ...data],\r\n                    trasy2: [...this.state.trasy, ...data]\r\n\r\n                })\r\n            )\r\n            .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    handleRanking = (e) => {\r\n        this.setState({\r\n            isModalRanking: true,\r\n        })\r\n\r\n        fetch(`http://dearjean.ddns.net:44301/api/Rewards/`, {\r\n            method: \"get\",    \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    ranking: [...data]\r\n                })\r\n            }\r\n            )\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    handleProfile = (e) => {\r\n        this.setState({ ranking: [] })\r\n\r\n        this.setState({\r\n            isModalProfile: true,\r\n        })\r\n        fetch(`http://dearjean.ddns.net:44301/api/Account/UserInfo/`, {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({\r\n                    // trasy: [...this.state.trasy, ...data],\r\n                    user: [...data]\r\n\r\n                })\r\n            )\r\n            .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    myIp = (id) => {\r\n        console.log(id)\r\n        const newHistory2 = []\r\n        // console.log(this.state.idRt.RouteId)\r\n        for (const point of this.state.idRt) {\r\n            if (id === point.RouteId) {\r\n                // console.log(point.Name)\r\n                // console.log(point.RouteId)\r\n                newHistory2.push({\r\n                    Name: point.Name,\r\n                    Description: point.Description,\r\n                    X: point.Y,\r\n                    Y: point.X\r\n                });\r\n            }\r\n        }\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: 10,\r\n        })\r\n        const loop = () => {\r\n            for (const obj of this.state.history2) {\r\n                let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\r\n                new mapboxgl.Marker()\r\n                    .setLngLat(myLatlng)\r\n                    .setPopup(new mapboxgl.Popup({ offset: 25 })\r\n                        .setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>'\r\n                        ))\r\n                    .addTo(map);\r\n            }\r\n        }\r\n        this.setState({ history2: newHistory2 }, loop)\r\n        this.setState({\r\n            isModalOpen2: false,\r\n            isModalOpen4: false,\r\n        })\r\n\r\n\r\n\r\n        var bounds = [\r\n            [18.11318691590263, 50.022222],\r\n            [18.90647886197926, 53.3331258]\r\n        ];\r\n        map.setMaxBounds(bounds);\r\n\r\n        // initialize the map canvas to interact with later\r\n        var canvas = map.getCanvasContainer();\r\n\r\n        // an arbitrary start will always be the same\r\n        // only the end or destination will change\r\n        start = [18.59436, 53.01011];\r\n        // this is where the code for the next step will go\r\n        // create a function to make a directions request\r\n        function getRoute(end) {\r\n            // make a directions request using cycling profile\r\n            // an arbitrary start will always be the same\r\n            // only the end or destination will change\r\n            // var start = [18.59436, 53.01011];\r\n            var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] +\r\n                ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;\r\n\r\n            // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\r\n            var req = new XMLHttpRequest();\r\n            req.open('GET', url, true);\r\n            req.onload = function () {\r\n                var json = JSON.parse(req.response);\r\n                var data = json.routes[0];\r\n                var route = data.geometry.coordinates;\r\n                var geojson = {\r\n                    type: 'Feature',\r\n                    properties: {},\r\n                    geometry: {\r\n                        type: 'LineString',\r\n                        coordinates: route\r\n                    }\r\n                };\r\n                // if the route already exists on the map, reset it using setData\r\n                if (map.getSource('route')) {\r\n                    map.getSource('route').setData(geojson);\r\n                } else { // otherwise, make a new request\r\n                    map.addLayer({\r\n                        id: 'route',\r\n                        type: 'line',\r\n                        source: {\r\n                            type: 'geojson',\r\n                            data: {\r\n                                type: 'Feature',\r\n                                properties: {},\r\n                                geometry: {\r\n                                    type: 'LineString',\r\n                                    coordinates: geojson\r\n                                }\r\n                            }\r\n                        },\r\n                        layout: {\r\n                            'line-join': 'round',\r\n                            'line-cap': 'round'\r\n                        },\r\n                        paint: {\r\n                            'line-color': '#3887be',\r\n                            'line-width': 5,\r\n                            'line-opacity': 0.75\r\n                        }\r\n                    });\r\n                }\r\n                // get the sidebar and add the instructions\r\n                // var instructions = document.getElementById('instructions');\r\n                // var steps = data.legs[0].steps;\r\n\r\n                // var tripInstructions = [];\r\n\r\n                // for (var i = 0; i < steps.length; i++) {\r\n                //     tripInstructions.push(`<li> ${steps[i].maneuver.instruction} </li>`);\r\n                //     instructions.innerHTML = '<br><span class=\"duration\">Trip duration: ' + Math.floor(data.duration /\r\n                //         60) +\r\n                //         ' min 🚴 </span>' + tripInstructions.join(\"\");\r\n                // }\r\n            };\r\n            req.send();\r\n        }\r\n\r\n        map.on('load', function () {\r\n            // make an initial directions request that\r\n            // starts and ends at the same location\r\n            getRoute(start);\r\n\r\n            // Add starting point to the map\r\n            map.addLayer({\r\n                id: 'point',\r\n                type: 'circle',\r\n                source: {\r\n                    type: 'geojson',\r\n                    data: {\r\n                        type: 'FeatureCollection',\r\n                        features: [{\r\n                            type: 'Feature',\r\n                            properties: {},\r\n                            geometry: {\r\n                                type: 'Point',\r\n                                coordinates: start\r\n                            }\r\n                        }]\r\n                    }\r\n                },\r\n                paint: {\r\n                    'circle-radius': 10,\r\n                    'circle-color': 'black'\r\n                }\r\n            });\r\n            // this is where the code from the next step will go\r\n        });\r\n        map.on('click', function (e) {\r\n            var coordsObj = e.lngLat;\r\n            canvas.style.cursor = '';\r\n            var coords = Object.keys(coordsObj).map(function (key) {\r\n                return coordsObj[key];\r\n            });\r\n            var end = {\r\n                type: 'FeatureCollection',\r\n                features: [{\r\n                    type: 'Feature',\r\n                    properties: {},\r\n                    geometry: {\r\n                        type: 'Point',\r\n                        coordinates: coords\r\n                    }\r\n                }]\r\n            };\r\n            if (map.getLayer('end')) {\r\n                map.getSource('end').setData(end);\r\n            } else {\r\n                map.addLayer({\r\n                    id: 'end',\r\n                    type: 'circle',\r\n                    source: {\r\n                        type: 'geojson',\r\n                        data: {\r\n                            type: 'FeatureCollection',\r\n                            features: [{\r\n                                type: 'Feature',\r\n                                properties: {},\r\n                                geometry: {\r\n                                    type: 'Point',\r\n                                    coordinates: coords\r\n                                }\r\n                            }]\r\n                        }\r\n                    },\r\n                    paint: {\r\n                        'circle-radius': 2,\r\n                        'circle-color': '#f30'\r\n                    }\r\n                }\r\n                );\r\n            }\r\n            getRoute(coords);\r\n            start = [coords[0], coords[1]]\r\n\r\n        });\r\n\r\n        map.addControl(new mapboxgl.FullscreenControl());\r\n        map.addControl(new mapboxgl.NavigationControl());\r\n        map.addControl(\r\n            new mapboxgl.GeolocateControl({\r\n                positionOptions: {\r\n                    enableHighAccuracy: true\r\n                },\r\n                trackUserLocation: true\r\n            }))\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.search.length === 0) {\r\n            fetch(`http://dearjean.ddns.net:44301/api/Routes`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    throw Error(response.status)\r\n                })\r\n                .then(response => response.json())\r\n                .then(data =>\r\n                    this.setState({\r\n                        trasy2: [...data]\r\n                    })\r\n                )\r\n                .catch(error => console.log(error))\r\n        }\r\n        if (prevState.search !== this.state.search) {\r\n            fetch(`http://dearjean.ddns.net:44301/api/Routes/Search?word=${this.state.search}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    throw Error(response.status)\r\n                })\r\n                .then(response => response.json())\r\n                .then(data =>\r\n                    this.setState({\r\n                        trasy2: [...data]\r\n                    })\r\n                )\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        console.log(\"logout\")\r\n        sessionStorage.setItem('access_token', '');\r\n        sessionStorage.clear()\r\n        this.setState({\r\n            redirectToReferrer: true\r\n        })\r\n    }\r\n    gameIp(id) {\r\n        console.log(id)\r\n        this.setState({\r\n            isModalOpen3: true,\r\n        })\r\n        const newQuestion2 = []\r\n        for (const point of this.state.qBank) {\r\n            if (id === point.RouteId) {\r\n                console.log('tre')\r\n                newQuestion2.push({\r\n                    question: point.Question1,\r\n                    answers: [...point.Answers],\r\n                    correct: point.Correct,\r\n                    id: point.Id\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        this.setState({ qBank: newQuestion2 })\r\n\r\n        // console.log(newQuestion2)\r\n\r\n\r\n\r\n\r\n    }\r\n    openModal3 = () => {\r\n        this.setState({\r\n            isModalOpen3: true,\r\n        })\r\n    }\r\n    closeModal3 = () => {\r\n        fetch(`http://dearjean.ddns.net:44301/api/AnswerAndQuestion2`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                \"Authorization\": `bearer ${sessionStorage.getItem(\"access_token\")}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => (\r\n                this.setState({\r\n                    // gBank: ([...this.state.qBank, {\r\n                    //     Question1: data.Question1,\r\n                    //     Answers: [...data.Answers],\r\n                    //     Correct: data.Correct,\r\n                    //     RouteId: data.RouteId\r\n                    // }])\r\n                    qBank: [...this.state.qBank, ...data]\r\n                })\r\n                // console.log(data)\r\n            )\r\n\r\n            )\r\n            .catch(error => console.log(error))\r\n        this.setState({\r\n            isModalOpen3: false,\r\n            isModalOpen2: false\r\n        })\r\n\r\n    }\r\n    MyRoute = () => {\r\n        this.setState({ trasy: [] })\r\n        fetch(`http://dearjean.ddns.net:44301/api/Routes/GetMine`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"access_token\")\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(response.status)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({\r\n                    trasy: [...this.state.trasy, ...data],\r\n                    // trasy2: [...this.state.trasy, ...data]\r\n\r\n                })\r\n                // console.log(data)\r\n            )\r\n            .catch(error => console.log(error))\r\n        this.setState({\r\n            isModalOpen4: true,\r\n        })\r\n\r\n    }\r\n    myIp2 = (id) => {\r\n\r\n        console.log(id)\r\n        const newHistory3 = []\r\n        // console.log(this.state.idRt.RouteId)\r\n        for (const point of this.state.idRt) {\r\n            if (id === point.RouteId) {\r\n                // console.log(point.Name)\r\n                // console.log(point.RouteId)\r\n                newHistory3.push({\r\n                    Name: point.Name,\r\n                    Description: point.Description,\r\n                    X: point.Y,\r\n                    Y: point.X\r\n                });\r\n            }\r\n        }\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: 10,\r\n        })\r\n        const loop = () => {\r\n            for (const obj of this.state.history3) {\r\n                let myLatlng = new mapboxgl.LngLat(obj.X, obj.Y);\r\n                new mapboxgl.Marker()\r\n                    .setLngLat(myLatlng)\r\n                    .setPopup(new mapboxgl.Popup({ offset: 25 })\r\n                        .setHTML('<h3>' + obj.Name + '</h3><p>' + obj.Description + '</p>'\r\n                        ))\r\n                    .addTo(map);\r\n            }\r\n        }\r\n        this.setState({ history3: newHistory3 }, loop)\r\n        this.setState({\r\n            isModalOpen2: false,\r\n            isModalOpen4: false,\r\n        })\r\n    }\r\n    deleteTask = (id) => {\r\n        console.log(id)\r\n        const tasks = [...this.state.trasy]\r\n        console.log(tasks)\r\n        const index = tasks.findIndex(task => task.Id === id)\r\n        tasks.splice(index, 1)\r\n        console.log(tasks)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.redirectToReferrer) {\r\n            return (<Redirect to={'/login'} />)\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <button className=\"btn\" onClick={this.handleRoute}>Wszystkie trasy</button>\r\n                <button className=\"btn\" onClick={this.handleRanking}>Ranking użykowników</button>\r\n                <button className=\"btn\" onClick={this.handleProfile}>Mój profil</button>\r\n                {this.state.Creator && <button className=\"btn\" onClick={this.MyRoute}>Moje trasy</button>}\r\n                <div className=\"nav-area\">\r\n                    <button className=\"btn\" onClick={this.logout} type='button'>Wyloguj się</button>\r\n                </div>\r\n                {this.state.Point >= 500 ? <h1>{`Witaj obecnie masz: ${this.state.Point} punktów`}</h1> : <h1>{`Witaj obecnie masz: ${this.state.Point} punktów, uzyskaj 500 punktów, a sam zostaniesz kreatorem tras!`}</h1>}\r\n\r\n                {<div ref={el => this.mapContainer = el} className='mapContainer' ></div>}\r\n                <div className=\"wrapper tiitle\">\r\n                    {this.state.Creator && <form onSubmit={this.addItem2} className=\"form\">\r\n                        <input\r\n                            required\r\n                            className=\"lefcik\"\r\n                            type=\"text\"\r\n                            placeholder=\"Podaj nazwe trasy\"\r\n                            value={this.state.NameRoute}\r\n                            onChange={e => this.setState({\r\n                                NameRoute: e.target.value\r\n                            })}\r\n                        />\r\n                        <input\r\n                            required\r\n                            className=\"lefcik\"\r\n                            type=\"text\"\r\n                            placeholder=\"Podaj nazwe punktu..\"\r\n                            value={this.state.Name}\r\n                            onChange={e => this.setState({\r\n                                Name: e.target.value\r\n                            })}\r\n                        />\r\n                        <textarea\r\n                            // required\r\n                            className=\"lefcik\"\r\n                            type=\"text\"\r\n                            rows=\"5\"\r\n                            cols=\"33\"\r\n                            placeholder=\"Opis..\"\r\n                            value={this.state.Description}\r\n                            onChange={e => this.setState({\r\n                                Description: e.target.value\r\n                            })}\r\n                        />\r\n                        <input\r\n                            // required\r\n                            className=\"lefcik\"\r\n                            type=\"number\"\r\n                            placeholder=\"Długość\"\r\n                            value={this.state.X}\r\n                            onChange={e => this.setState({\r\n                                X: e.target.value\r\n                            })}\r\n                        />\r\n                        <input\r\n                            // required\r\n                            className=\"lefcik \"\r\n                            type=\"number\"\r\n                            placeholder=\"Szerokosc\"\r\n                            value={this.state.Y}\r\n                            onChange={e => this.setState({\r\n                                Y: e.target.value\r\n                            })}\r\n                        />\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <div>\r\n                                {this.state.activeButton ? <button className=\"btn\" onClick={() => this.appendElement(this.state.Name, this.state.Description, this.state.Y, this.state.X, this.state.RouteId)}>Dodaj punkt</button> : <button disabled className=\"btn\" onClick={() => this.appendElement(this.state.Name, this.state.Description, this.state.Y, this.state.X, this.state.RouteId)}>Dodaj punkt</button>}\r\n\r\n                                <button className=\"btn\" onClick={this.handleOnHistoryPush}>Utwórz trasę</button>\r\n                                <ul style={{ listStyle: 'none' }}>\r\n                                    {this.state.elements.map((element, index) => (\r\n                                        <>\r\n                                            <li key={element.index}>{`${element.Name}`}</li>\r\n                                        </>\r\n                                    ))}\r\n\r\n                                </ul>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </form>}\r\n\r\n\r\n                </div>\r\n                {this.state.Creator && <form onSubmit={this.addItem2} className=\"form\">\r\n                    <input\r\n                        // required\r\n                        className=\"lefcik\"\r\n                        type=\"text\"\r\n                        placeholder=\"Zadaj pytanie..\"\r\n                        value={this.state.Quest}\r\n                        onChange={e => this.setState({\r\n                            Quest: e.target.value\r\n                        })}\r\n                    />\r\n                    <input\r\n                        // required\r\n                        className=\"lefcik\"\r\n                        type=\"text\"\r\n                        placeholder=\"Przykładowa odpowiedź\"\r\n                        value={this.state.A}\r\n                        onChange={e => this.setState({\r\n                            A: e.target.value\r\n                        })}\r\n                    />\r\n                    <input\r\n                        // required\r\n                        className=\"lefcik\"\r\n                        type=\"text\"\r\n                        placeholder=\"Przykładowa odpowiedź\"\r\n                        value={this.state.B}\r\n                        onChange={e => this.setState({\r\n                            B: e.target.value\r\n                        })}\r\n                    />\r\n                    <input\r\n                        // required\r\n                        className=\"lefcik\"\r\n                        type=\"text\"\r\n                        placeholder=\"Przykładowa odpowiedź\"\r\n                        value={this.state.C}\r\n                        onChange={e => this.setState({\r\n                            C: e.target.value\r\n                        })}\r\n                    />\r\n                    <input\r\n                        // required\r\n                        className=\"lefcik\"\r\n                        type=\"text\"\r\n                        placeholder=\"Przykładowa odpowiedź\"\r\n                        value={this.state.D}\r\n                        onChange={e => this.setState({\r\n                            D: e.target.value\r\n                        })}\r\n                    />\r\n                    <input\r\n                        // required\r\n                        className=\"lefcik\"\r\n                        type=\"text\"\r\n                        placeholder=\"Poprawna odpowiedź\"\r\n                        value={this.state.Good}\r\n                        onChange={e => this.setState({\r\n                            Good: e.target.value\r\n                        })}\r\n                    />\r\n                    <input\r\n                        // required\r\n                        className=\"lefcik\"\r\n                        type=\"number\"\r\n                        placeholder=\"Numer trasy..\"\r\n                        value={this.state.RouteId2}\r\n                        onChange={e => this.setState({\r\n                            RouteId2: e.target.value\r\n                        })}\r\n                    />\r\n                    <button className=\"btn\" onClick={() => this.appendQuestion(this.state.Quest, this.state.A, this.state.B, this.state.C, this.state.D, this.state.Good, this.state.RouteId2)}>Wyślij zagadkę</button>\r\n                </form>}\r\n                {this.state.isModalOpen &&\r\n                    <div className=\"container\">\r\n                        <button className=\"closeButton\" onClick={this.closeModal}></button>\r\n                        <div className=\"title\">Quiz</div>\r\n                        {this.state.qBank.length > 0 &&\r\n                            this.state.responses < 1 &&\r\n\r\n                            this.state.qBank.map(\r\n                                ({ question, answers, correct, id }) => (\r\n                                    <QuestionBox key={id} question={question} options={answers} selected={answer => this.computeAnswer(answer, correct)} />\r\n                                )\r\n                            )}\r\n                        {this.state.responses === 1 ? (<Result addItem2={this.addItem2} score={this.state.score} playAgain={this.playAgain} />) : null}\r\n                    </div>}\r\n\r\n                {this.state.isModalOpen2 &&\r\n                    <div className=\"container\">\r\n                        <button className=\"closeButton\" onClick={this.closeModal2}></button>\r\n                        <div className=\"title\">Wszystkie trasy</div>\r\n                        <input\r\n                            className=\"lefcik searching\"\r\n                            type=\"text\"\r\n                            placeholder=\"Szukaj..\"\r\n                            value={this.state.search}\r\n                            onChange={e => this.setState({\r\n                                search: e.target.value\r\n                            })}\r\n\r\n                        />\r\n\r\n                        <ul>\r\n                            {this.state.trasy2.map((historyRecord) => {\r\n                                return <>\r\n                                    <li style={{ cursor: 'pointer' }} onClick={() => this.myIp(historyRecord.Id)} key={historyRecord.Id}>{`Nazwa nr ${historyRecord.Id}: ${historyRecord.Name}`}</li><button onClick={() => this.gameIp(historyRecord.Id)} className=\"btn\">Zagraj</button>\r\n\r\n                                </>\r\n                            })}\r\n\r\n                        </ul>\r\n\r\n                    </div>}\r\n\r\n                {this.state.isModalRanking &&\r\n                    <div className=\"container\">\r\n                        <button className=\"closeButton\" onClick={this.closeModalRanking}></button>\r\n                        <div className=\"title\">Ranking Użytkowników</div>\r\n                            <ul id=\"1\">\r\n                            {this.state.ranking.map((historyRecord) => {\r\n                                return <>\r\n                                    <li className=\"list\"> { `Użytkownik: ${historyRecord.Email} Liczba punktów: ${historyRecord.Punkty}`}</li>\r\n                                </>\r\n                            })}\r\n\r\n                        </ul>\r\n                </div>}\r\n\r\n                {this.state.isModalProfile &&\r\n                    <div className=\"container\">\r\n                        <button className=\"closeButton\" onClick={this.closeModalProfile}></button>\r\n                        <div className=\"title\">Profil</div>\r\n                            <ul>\r\n                               {this.state.ranking.map((historyRecord) => {\r\n                                return <>\r\n                                   <li >{`Nazwa użytkownika: ${historyRecord.Id} Liczba punktów: ${historyRecord.Punkty}`}</li>\r\n                                       </>\r\n                            })}\r\n                        </ul>\r\n                </div>}\r\n\r\n                {this.state.isModalOpen4 &&\r\n                    <div className=\"container\">\r\n                        <button className=\"closeButton\" onClick={this.closeModal4}></button>\r\n                        <div className=\"title\">Moje trasy</div>\r\n                        <input\r\n                            className=\"lefcik searching\"\r\n                            type=\"text\"\r\n                            placeholder=\"Szukaj..\"\r\n                            value={this.state.search}\r\n                            onChange={e => this.setState({\r\n                                search: e.target.value\r\n                            })}\r\n\r\n                        />\r\n\r\n                        <ul>\r\n                            {this.state.trasy.map((historyRecord, id) => {\r\n                                return <>\r\n                                    <li style={{ cursor: 'pointer' }} onClick={() => this.myIp2(historyRecord.Id)} key={historyRecord.Id}>{`Nazwa nr ${historyRecord.Id}: ${historyRecord.Name}`}</li><button onClick={() => this.deleteTask(historyRecord.Id)} className=\"btn\">Usuń</button>\r\n\r\n                                </>\r\n                            })}\r\n\r\n                        </ul>\r\n\r\n                    </div>}\r\n\r\n\r\n                {this.state.isModalOpen3 &&\r\n                    <div className=\"container\">\r\n                        <button className=\"closeButton\" onClick={this.closeModal3}></button>\r\n                        <div className=\"title\">Quiz</div>\r\n                        {this.state.qBank.map(\r\n                            ({ question, answers, correct, id }) => (\r\n                                <QuestionBox key={id} question={question} options={answers} selected={Answers => this.computeAnswer(Answers, correct)} />\r\n\r\n                            )\r\n                        )}\r\n                        {<Result addItem2={this.addItem2} score={this.state.score} playAgain={this.playAgain} />}\r\n                    </div>}\r\n\r\n\r\n\r\n            </>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}